<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lptexas</title>
  
  <subtitle>の - 小狼窝</subtitle>
  <link href="http://asucanyh-cn.github.io/atom.xml" rel="self"/>
  
  <link href="http://asucanyh-cn.github.io/"/>
  <updated>2023-03-29T02:22:16.491Z</updated>
  <id>http://asucanyh-cn.github.io/</id>
  
  <author>
    <name>Lptexas</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring相关原理总结</title>
    <link href="http://asucanyh-cn.github.io/posts/3306600581/"/>
    <id>http://asucanyh-cn.github.io/posts/3306600581/</id>
    <published>2023-03-20T16:00:00.000Z</published>
    <updated>2023-03-29T02:22:16.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BeanFactory和ApplicationContext"><a href="#BeanFactory和ApplicationContext" class="headerlink" title="BeanFactory和ApplicationContext"></a><a href="https://juejin.cn/post/7166381640036384804">BeanFactory和ApplicationContext</a></h1><h2 id="两者关系"><a href="#两者关系" class="headerlink" title="两者关系"></a>两者关系</h2><table><thead><tr><th>BeanFactory</th><th>ApplicationContext</th></tr></thead><tbody><tr><td>早期接口，被称为Spring的Bean工厂</td><td>后期更高级接口，称之为Spring 容器</td></tr><tr><td>BeanFactory的API更偏向底层</td><td>API大多数是对BeanFactory底层API的封装；<br />且有更多的拓展功能：监听功能、国际化功能等</td></tr><tr><td>封装了Bean创建的主要逻辑和功能</td><td>继承了BeanFactory的功能</td></tr><tr><td>Bean的初始化时机不同，原始BeanFactory是在首次调用getBean时才进行Bean的创建</td><td>ApplicationContext则是配置文件加载，容器一创建就将Bean都实例化并初始化好。</td></tr></tbody></table><h2 id="在Spring基础环境下，常用的三个ApplicationContext作用"><a href="#在Spring基础环境下，常用的三个ApplicationContext作用" class="headerlink" title="在Spring基础环境下，常用的三个ApplicationContext作用"></a>在Spring基础环境下，常用的三个ApplicationContext作用</h2><table><thead><tr><th>实现类</th><th>功能描述</th></tr></thead><tbody><tr><td><strong>ClassPathXmlApplicationContext</strong></td><td><strong>加载类路径下的xml配置的ApplicationContext</strong></td></tr><tr><td><strong>FileSystemXmlApplicationContext</strong></td><td><strong>加载磁盘路径下的xml配置的ApplicationContext</strong></td></tr><tr><td><strong>AnnotationConfigApplicationContext</strong></td><td><strong>加载注解配置类的ApplicationContext</strong></td></tr></tbody></table><h2 id="在Spring的web环境下，常用的两个ApplicationContext作用"><a href="#在Spring的web环境下，常用的两个ApplicationContext作用" class="headerlink" title="在Spring的web环境下，常用的两个ApplicationContext作用"></a>在Spring的web环境下，常用的两个ApplicationContext作用</h2><blockquote><p>导入依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>实现类</th><th>功能描述</th></tr></thead><tbody><tr><td>XmlWebApplicationContext</td><td>web环境下，加载类路径下的xml配置的ApplicationContext</td></tr><tr><td>AnnotationConfigWebApplicationContext</td><td>web环境下，加载磁盘路径下的xml配置的ApplicationContext</td></tr></tbody></table><h1 id="InitializingBean-接口"><a href="#InitializingBean-接口" class="headerlink" title="InitializingBean 接口"></a><a href="https://www.cnblogs.com/study-everyday/p/6257127.html">InitializingBean 接口</a></h1><blockquote><p>完成一些Bean的初始化操作</p></blockquote><h2 id="实现InitializingBean接口与在配置文件中指定init-method有什么不同？"><a href="#实现InitializingBean接口与在配置文件中指定init-method有什么不同？" class="headerlink" title="实现InitializingBean接口与在配置文件中指定init-method有什么不同？"></a>实现InitializingBean接口与在配置文件中指定init-method有什么不同？</h2><p>如果同时实现了InitializingBean接口和init-method，那么系统会先调用InitializingBean再调用init-method指定的初始化方法。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>1：spring为bean提供了两种初始化bean的方式，实现InitializingBean接口，实现afterPropertiesSet方法，或者在配置文件中同过init-method指定，两种方式<code>可以同时使用</code></p><p>2：实现InitializingBean接口是直接调用afterPropertiesSet方法，比通过反射调用init-method指定的方法<code>效率相对来说要高点</code>。但是init-method方式消除了对spring的依赖</p><p>3：<code>如果调用afterPropertiesSet方法时出错，则不调用init-method指定的方法</code>。</p><h2 id="Spring主要的实例化方式"><a href="#Spring主要的实例化方式" class="headerlink" title="Spring主要的实例化方式"></a>Spring主要的实例化方式</h2><ul><li><p>构造方式实例化：底层通过构造方法对Bean进行实例化</p><ul><li>无参构造方法实例化</li><li>有参构造方法实例化<ul><li><constructor-arg> 添加参数</li></ul></li></ul></li><li><p>工厂方式实例化：底层通过调用自定义的工厂方法对Bean进行实例化</p><ul><li>静态工厂方法实例化Bean<ul><li>直接配置工厂对象及其静态方法配置</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 工厂类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean</span> &#123;</span><br><span class="line">    <span class="comment">// 静态工厂方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> UserDaoImpl <span class="title function_">userDaoImpl</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="comment">// 可以在此编写一些其他逻辑代码</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>(name, age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.factory.UserDaoFactoryBean&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;userDaoImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小🐕&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实例工厂方法实例化Bean<ul><li>先有工厂对象，再用工厂对象去调用非静态方法</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置实例工厂Bean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoFactoryBean2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.factory.UserDaoFactoryBean2&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置实例工厂Bean的哪个方法作为工厂方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoImpl2&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;userDaoFactoryBean2&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;userDaoImpl2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小🐱&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 工厂类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean2</span> &#123;</span><br><span class="line">    <span class="comment">// 非静态工厂方法</span></span><br><span class="line">    <span class="keyword">public</span>  UserDaoImpl <span class="title function_">userDaoImpl2</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="comment">// 可以在此编写一些其他逻辑代码</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>(name, age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现FactoryBean规范延迟实例化Bean</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean3</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;UserDao&gt; &#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> UserDao <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">     <span class="keyword">return</span> UserDao.class;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.factory.UserDaoFactoryBean3&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Bean-实例化的基本流程"><a href="#Bean-实例化的基本流程" class="headerlink" title="Bean 实例化的基本流程"></a>Bean 实例化的基本流程</h1><p>Spring容器在进行初始化时，会将xml配置的的信息（Bean标签）封装成一个BeanDefinition对象，所有的 BeanDefinition存储到一个名为beanDefinitionMap的Map集合中去，Spring框架在对该Map进行遍历，使用反射创建Bean实例对象，创建好的Bean对象存储在一个名为singletonObjects的Map集合中，当调用getBean方法时则最终从该Map集合中取出Bean实例对象返回。</p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230324112528550.png" alt="image-20230324112528550"></p><h1 id="自定义命名空间的解析过程"><a href="#自定义命名空间的解析过程" class="headerlink" title="自定义命名空间的解析过程"></a>自定义命名空间的解析过程</h1><h1 id="解决循环引用问题：三级缓存"><a href="#解决循环引用问题：三级缓存" class="headerlink" title="解决循环引用问题：三级缓存"></a>解决循环引用问题：三级缓存</h1><p><img src="https://asucanyh-cn.github.io/img/post/image-20230324172845976.png" alt="image-20230324172845976"></p><p><img src="https://asucanyh-cn.github.io/img/post/Spring%E4%B8%89%E7%BA%A7%E7%BC%93%E5%AD%98%E6%BA%90%E7%A0%81%E5%88%A8%E6%9E%90%E6%80%9D%E8%B7%AF.png" alt="Spring三级缓存源码刨析思路"></p>]]></content>
    
    
    <summary type="html">对Spring一些原理性的东西进行总结。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://asucanyh-cn.github.io/tags/Java/"/>
    
    <category term="Spring" scheme="http://asucanyh-cn.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>常用IDE的技巧</title>
    <link href="http://asucanyh-cn.github.io/posts/3868235888/"/>
    <id>http://asucanyh-cn.github.io/posts/3868235888/</id>
    <published>2023-03-20T16:00:00.000Z</published>
    <updated>2023-03-29T02:22:16.495Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a>Eclipse</h1><h2 id="代码换行"><a href="#代码换行" class="headerlink" title="代码换行"></a>代码换行</h2><blockquote><p>Alt + Shift + Y</p></blockquote><h2 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码"></a>查看源码</h2><blockquote><p>F3 </p></blockquote><h2 id="查看类继承和实现关系"><a href="#查看类继承和实现关系" class="headerlink" title="查看类继承和实现关系"></a>查看类继承和实现关系</h2><blockquote><p> F4或Ctrl + T</p></blockquote><h2 id="查看方法的调用层次"><a href="#查看方法的调用层次" class="headerlink" title="查看方法的调用层次"></a>查看方法的调用层次</h2><blockquote><p>Ctrl+Alt+H    </p></blockquote><h2 id="xml开启代码提示"><a href="#xml开启代码提示" class="headerlink" title="xml开启代码提示"></a>xml开启代码提示</h2><blockquote><p>Alt + &#x2F;</p></blockquote><h2 id="查找某个类文件"><a href="#查找某个类文件" class="headerlink" title="查找某个类文件"></a>查找某个类文件</h2><blockquote><p>Ctrl+Shift+T</p></blockquote>]]></content>
    
    
    <summary type="html">记录一些使用技巧。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="IDE" scheme="http://asucanyh-cn.github.io/tags/IDE/"/>
    
  </entry>
  
  <entry>
    <title>spring初始化一个项目</title>
    <link href="http://asucanyh-cn.github.io/posts/4267699228/"/>
    <id>http://asucanyh-cn.github.io/posts/4267699228/</id>
    <published>2023-03-19T16:00:00.000Z</published>
    <updated>2023-03-29T02:22:16.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建一个spring项目"><a href="#创建一个spring项目" class="headerlink" title="创建一个spring项目"></a>创建一个spring项目</h1><h2 id="手动导入Jar包"><a href="#手动导入Jar包" class="headerlink" title="手动导入Jar包"></a>手动导入Jar包</h2><blockquote><p>创建普通的Java项目，在lib中Spring导入相关包的方法。</p></blockquote><h3 id="Spring相关jar包"><a href="#Spring相关jar包" class="headerlink" title="Spring相关jar包"></a><a href="https://blog.csdn.net/qq_35080796/article/details/111355515">Spring相关jar包</a></h3><blockquote><p>官方下载链接</p><p><a href="https://repo.spring.io/ui/native/release/org/springframework/spring/">https://repo.spring.io/ui/native/release/org/springframework/spring/</a></p></blockquote><h3 id="spring依赖的日志包"><a href="#spring依赖的日志包" class="headerlink" title="spring依赖的日志包"></a>spring依赖的日志包</h3><blockquote><p><a href="http://commons.apache.org/proper/commons-logging/download_logging.cgi">http://commons.apache.org/proper/commons-logging/download_logging.cgi</a></p></blockquote><h3 id="存放-jar包以及加载"><a href="#存放-jar包以及加载" class="headerlink" title="存放 jar包以及加载"></a>存放 jar包以及加载</h3><blockquote><p>解压后将相关jar包放在工程的lib目录下。</p></blockquote><p><img src="https://asucanyh-cn.github.io/img/post/image-20230320172732004.png" alt="image-20230320172732004"></p><h2 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h2><blockquote><p>在maven项目中导入spring依赖，maven会自动完成jar包下载。</p></blockquote><p><a href="https://blog.csdn.net/daponi/article/details/100731341">四个方面：</a><br>1）spring核心依赖<br>      spring-core、spring-beans、spring-context</p><p>2）spring dao依赖（提供JDBCTemplate）<br>      spring-jdbc、spring-tx</p><p>3）spring web依赖<br>      spring-web、spring-webmvc</p><p>4）spring test依赖<br>      spring-test</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 版本可以自己选择 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-instrument<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="在eclipse中查看源码"><a href="#在eclipse中查看源码" class="headerlink" title="在eclipse中查看源码"></a><a href="https://blog.csdn.net/weixin_43992507/article/details/108093905">在eclipse中查看源码</a></h1><blockquote><p>快捷键是<code>F3</code></p></blockquote><ul><li><a href="https://liaoyongguang.blog.csdn.net/article/details/52137203?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-52137203-blog-108093905.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-52137203-blog-108093905.pc_relevant_default&utm_relevant_index=4">用maven项目，可以看源码？</a></li><li>这里介绍普通Java项目中的spring项目怎么看源码。</li><li>介绍如何使用Gradle查看源码</li></ul><p>下载spring-Frame源码</p><blockquote><p>github</p><p><a href="https://github.com/spring-projects/spring-framework/tags">https://github.com/spring-projects/spring-framework/tags</a></p></blockquote><h2 id="在普通Java项目中查看源码"><a href="#在普通Java项目中查看源码" class="headerlink" title="在普通Java项目中查看源码"></a>在普通Java项目中查看源码</h2><p>下载完源码后，在需要查看源码的地方如某个注解，按<code>F3</code>，在下图页面中，点击<code>Attach Source</code></p><p>使用文件夹的方式，选择上一步下载的源码解压后的目录。</p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230320201344093.png" alt="image-20230320201344093"></p><h2 id="使用Gradle查看源码"><a href="#使用Gradle查看源码" class="headerlink" title="使用Gradle查看源码"></a>使用Gradle查看源码</h2><h3 id="安装Gradle以及配置环境"><a href="#安装Gradle以及配置环境" class="headerlink" title="安装Gradle以及配置环境"></a>安装Gradle以及配置环境</h3><blockquote><p><a href="https://gradle.org/releases/">https://gradle.org/releases/</a></p></blockquote><p>选择<code>binary-only</code>，下载完毕后解压，配置<code>系统环境变量</code>。</p><h3 id="在eclipse中import源码"><a href="#在eclipse中import源码" class="headerlink" title="在eclipse中import源码"></a>在eclipse中import源码</h3><blockquote><p>File-&gt;Import-&gt;Gradle-&gt;Project root directory</p><p>Project root directory为源码解压后的根目录</p></blockquote><p>导入过程较久，请耐心等待。</p>]]></content>
    
    
    <summary type="html">记录一些模板和链接</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://asucanyh-cn.github.io/tags/Java/"/>
    
    <category term="spring" scheme="http://asucanyh-cn.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Java之Spring AOP面向切面编程</title>
    <link href="http://asucanyh-cn.github.io/posts/751312367/"/>
    <id>http://asucanyh-cn.github.io/posts/751312367/</id>
    <published>2023-03-12T16:00:00.000Z</published>
    <updated>2023-03-29T02:22:16.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AOP面向切面编程"><a href="#AOP面向切面编程" class="headerlink" title="AOP面向切面编程"></a>AOP面向切面编程</h1><p>用于解决系统层面上的问题，比如：日志、事务、权限等待。它是一种编程范式，不是编程语言。</p><h2 id="优点以及一些概念"><a href="#优点以及一些概念" class="headerlink" title="优点以及一些概念"></a><a href="https://blog.csdn.net/pedro7k/article/details/115415675">优点以及一些概念</a></h2><h3 id="1、AOP的优点"><a href="#1、AOP的优点" class="headerlink" title="1、AOP的优点"></a>1、AOP的优点</h3><ul><li>降低模块之间的耦合度</li><li>使系统更容易扩展</li><li>更好的代码复用</li><li>非业务代码更加集中，不分散，便于统一管理</li><li>业务代码更加简洁纯粹，不掺杂其他的代码的影响</li></ul><h3 id="2、AOP中出现的一些概念"><a href="#2、AOP中出现的一些概念" class="headerlink" title="2、AOP中出现的一些概念"></a>2、<a href="https://blog.csdn.net/Java_xiaobaibai6/article/details/108156664">AOP中出现的一些概念</a></h3><ul><li><h3 id="横切关注点"><a href="#横切关注点" class="headerlink" title="横切关注点"></a><strong>横切关注点</strong></h3></li></ul><p>对哪些方法进行拦截，拦截后怎么处理，这些关注点称之为横切关注点</p><ul><li><h3 id="Aspect-切面"><a href="#Aspect-切面" class="headerlink" title="Aspect 切面"></a>Aspect 切面</h3></li></ul><p>通常是一个类，里面可以定义切入点和通知。</p><ul><li><h3 id="JointPoint-连接点"><a href="#JointPoint-连接点" class="headerlink" title="JointPoint 连接点"></a>JointPoint 连接点</h3></li></ul><p>连接点是在应用执行中能够插入切面的一个点。即程序执行过程中能够应用通知的所有点。</p><p>程序执行过程中明确的点，一般是方法的调用。</p><p>被拦截到的点，因为Spring只支持方法类型的连接点，所以在Spring中连接点指的就是被拦截到的方法，实际上连接点还可以是字段或者构造器。</p><ul><li><h3 id="Advice-通知"><a href="#Advice-通知" class="headerlink" title="Advice 通知"></a>Advice 通知</h3></li></ul><p>AOP在特定的切入点上执行的增强处理</p><ul><li><h3 id="Pointcut-切入点"><a href="#Pointcut-切入点" class="headerlink" title="Pointcut 切入点"></a>Pointcut 切入点</h3></li></ul><p>就是带有通知的连接点，在程序中主要体现为<code>书写切入点表达式</code></p><ul><li><h3 id="Weaving-织入"><a href="#Weaving-织入" class="headerlink" title="Weaving 织入"></a><a href="https://zhuanlan.zhihu.com/p/161705262">Weaving 织入</a></h3></li></ul><p>将切面应用到目标对象，并创建新的代理对象的过程。</p><p>切面在指定的连接点被织入到目标对象中。</p><p>在目标对象的生命周期里有多个点可以进行织入:</p><ol><li>编译期:切面在目标类编译时被织入。这种方式需要特殊的编译器。Aspect的织入编译器就是以这种方式织入切面的。</li><li>类加载期:切面在目标类加载到JVM时被织入。这种方式需要特殊的类加载器(ClassLoader) ,它可以在目标类被引入应用之前增强该目标类的字节码。AspectJ5的加载时织入(load-time weaving, LTW)就支持以这种方式织入切面。</li><li>运行期:切面在应用运行的某个时刻被织入。一般情况下,在织入切面时, AOP容器会为目标对象动态地创建一个代理对象（动态代理）。Spring AOP就是以这种方式织入切面的。</li></ol><ul><li><h3 id="AOP-Proxy-代理"><a href="#AOP-Proxy-代理" class="headerlink" title="AOP Proxy 代理"></a>AOP Proxy 代理</h3></li></ul><p>AOP框架创建的对象，代理就是目标对象的加强。Spring中的AOP代理可以使JDK动态代理，也可以是CGLIB代理，前者基于接口，后者基于子类</p><h1 id="常见通知"><a href="#常见通知" class="headerlink" title="常见通知"></a><a href="https://zhuanlan.zhihu.com/p/161705262">常见通知</a></h1><p>5种Advice</p><ul><li><p><strong>前置通知（Before）</strong>：在目标方法被调用之前调用通知功能。</p></li><li><p><strong>后置通知（After-returning）</strong>：在目标方法成功执行之后调用通知。目标方法异常不执行。</p></li><li><p><strong>异常通知（After-throwing)）</strong>：在目标方法抛出异常后调用通知。</p></li><li><p><strong>环绕通知（Around）</strong> ：通知包裹了被通知的方法，在被通知的方法调用之前和调用之后执行自定义的行为。</p><ul><li>环绕（后）通知，目标方法异常不执行。</li></ul></li><li><p><strong>最终通知（After）</strong>：在目标方法完成之后调用通知，此时不会关心方法的输出是什么。</p></li></ul><h1 id="AOP实践——基于xml的Spring"><a href="#AOP实践——基于xml的Spring" class="headerlink" title="AOP实践——基于xml的Spring"></a>AOP实践——基于xml的Spring</h1><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.aspectj&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;<span class="number">1.9</span><span class="number">.7</span>&lt;/version&gt;</span><br><span class="line">  &lt;scope&gt;compile&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="配置命名空间"><a href="#配置命名空间" class="headerlink" title="配置命名空间"></a>配置命名空间</h2><blockquote><p>关于aop的三行</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">context:xsi</span>=<span class="string">&quot;schemaLocation=http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context/spring-context.xsd&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="AOP的两种配置方式"><a href="#AOP的两种配置方式" class="headerlink" title="AOP的两种配置方式"></a>AOP的两种配置方式</h2><h3 id="第一种，使用-lt-aspect-gt-配置。"><a href="#第一种，使用-lt-aspect-gt-配置。" class="headerlink" title="第一种，使用&lt;aspect&gt;配置。"></a>第一种，使用<code>&lt;aspect&gt;</code>配置。</h3><blockquote><p>这种方式更加灵活。Advice方法的配置用标签实现。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定切入点 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 也可以直接将execution表达式写在pointcut-ref属性中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(void com.service.impl.UserServiceImpl.show())&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定通知 以及类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;myAdvice&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;beforeAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;afterReturnAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;aroundAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;afterThrowingAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;afterAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.advice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdvice</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了前置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturnAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了后置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">aroundAdvice</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了环绕(前)增强...&quot;</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();<span class="comment">//执行目标方法（目标方法有可能有返回值所以返回Object）</span></span><br><span class="line">System.out.println(<span class="string">&quot;执行了环绕(后)增强...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> proceed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowingAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了异常后增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了最终增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二种，使用-lt-advisor-gt-配置。（开发中基本不用）"><a href="#第二种，使用-lt-advisor-gt-配置。（开发中基本不用）" class="headerlink" title="第二种，使用&lt;advisor&gt;配置。（开发中基本不用）"></a>第二种，使用<code>&lt;advisor&gt;</code>配置。（开发中基本不用）</h3><blockquote><p>需要增强类实现<code>相应的Advice接口或其子接口</code>。</p><p>相比于前者，其Advice方法在advice类中实现，标签只需要引用advice类和切入点即可。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(void com.service.impl.UserServiceImpl.show())&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">advice-ref</span>=<span class="string">&quot;myAdvice2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.advice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.AfterReturningAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.MethodBeforeAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdvice2</span> <span class="keyword">implements</span> <span class="title class_">MethodBeforeAdvice</span>, AfterReturningAdvice &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(Method method, Object[] args, <span class="meta">@Nullable</span> Object target)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了前置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturning</span><span class="params">(<span class="meta">@Nullable</span> Object returnValue, Method method, Object[] args, <span class="meta">@Nullable</span> Object target)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了后置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="两种方法的比较"><a href="#两种方法的比较" class="headerlink" title="两种方法的比较"></a><a href="https://juejin.cn/post/7167151634357698590#heading-22">两种方法的比较</a></h3><p><strong>语法形式不同：</strong></p><ul><li>advisor是通过实现接口来确认通知的类型</li><li>aspect是通过配置确认通知的类型，更加灵活</li></ul><p><strong>可配置的切面数量不同：</strong></p><ul><li>一个advisor只能配置一个固定通知和一个切点表达式</li><li>一个aspect可以配置多个通知和多个切点表达式任意组合</li></ul><p><strong>使用场景不同：</strong></p><ul><li>允许随意搭配情况下可以使用aspect进行配置</li><li>如果通知类型单一、切面单一的情况下可以使用advisor进行配置</li><li>在通知类型已经固定，不用人为指定通知类型时，可以使用advisor进行配置，例如后面要学习的 Spring事务控制的配置</li></ul><h2 id="AOP原理刨析"><a href="#AOP原理刨析" class="headerlink" title="AOP原理刨析"></a>AOP原理刨析</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1rt4y1u7q5?t=1406.6&p=90">Bilibili精准空降</a>，<a href="https://juejin.cn/post/7167151634357698590#heading-27">网友文字版</a></p></blockquote><h1 id="AOP实践——基于注解的Spring"><a href="#AOP实践——基于注解的Spring" class="headerlink" title="AOP实践——基于注解的Spring"></a>AOP实践——基于注解的Spring</h1><h2 id="启用AOP的注解"><a href="#启用AOP的注解" class="headerlink" title="启用AOP的注解"></a>启用AOP的注解</h2><blockquote><p>如果你选择使用配置文件来使用注解</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用配置类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br></pre></td></tr></table></figure><h2 id="切面的配置"><a href="#切面的配置" class="headerlink" title="切面的配置"></a>切面的配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span> <span class="comment">//声明切面</span></span><br><span class="line"><span class="meta">@Before()</span> <span class="comment">//前置增强</span></span><br><span class="line"><span class="meta">@AfterReturning()</span>   <span class="comment">//后置增强</span></span><br><span class="line"><span class="meta">@Around()</span> <span class="comment">//环绕增强</span></span><br><span class="line"><span class="meta">@AfterThrowing(value或pointcut=&quot;&quot;,throwing=&quot;&quot;,...)</span> <span class="comment">//抛出异常后增强</span></span><br><span class="line"><span class="meta">@After()</span>       <span class="comment">//最终增强</span></span><br></pre></td></tr></table></figure><h2 id="切点表达式抽取"><a href="#切点表达式抽取" class="headerlink" title="切点表达式抽取"></a>切点表达式抽取</h2><ol><li>写一个<code>空方法</code>，添加注解<code>@Pointcut(&quot;execution(* com.package.*.*(..))&quot;)</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdvice</span>&#123;</span><br><span class="line"><span class="meta">@Pointcut(&quot;execution(* com.package.*.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myPointcut</span><span class="params">()</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用<code>类名.方法名()</code>的语法引用切点表达式</li></ol><div class="admonition note"><p class="admonition-title">“ ”</p><p>注意这种格式只是一种语法规范，而不是Java代码！</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before(&quot;MyAdvice.myPointcut()&quot;)</span> <span class="comment">// &lt;=&gt; @Before(&quot;execution(* com.package.*.*(..))&quot;)</span></span><br></pre></td></tr></table></figure><h1 id="SpringBoot-AOP实践"><a href="#SpringBoot-AOP实践" class="headerlink" title="SpringBoot AOP实践"></a>SpringBoot AOP实践</h1><h2 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupld</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupld</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactld</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactld</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="拦截方法"><a href="#拦截方法" class="headerlink" title="拦截方法"></a>拦截方法</h2><h3 id="方法一-声明自定义注解进行拦截"><a href="#方法一-声明自定义注解进行拦截" class="headerlink" title="方法一 声明自定义注解进行拦截"></a>方法一 声明自定义注解进行拦截</h3><blockquote><p>新建<code>Annotation</code>包，新建<code>adminOnly</code>接口</p></blockquote><ul><li>在<code>interface</code>前添加<code>@</code>表明定义的是注解</li><li>添加<code>@annotation</code>注解</li></ul><div class="admonition info"><p class="admonition-title">“”</p><p><a href="https://blog.csdn.net/xsp_happyboy/article/details/80987484">自定义注解有哪些参数呢？</a></p></div><ul><li>添加参数<code>@Retention</code>、<code>@Target</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.Annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span> <span class="comment">//指定了注解的生命周期在运行时</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span><span class="comment">//指定了注解应用在方法上</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> adminOnly &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法二-使用execution表达式拦截"><a href="#方法二-使用execution表达式拦截" class="headerlink" title="方法二 使用execution表达式拦截"></a>方法二 使用execution表达式拦截</h3><p>语法格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution(修饰符pattern 返回值pattern 描述包名方法名(参数) 方法抛出异常pattern)</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(public * com.example.controller.*Controller.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">match</span><span class="params">()</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(&quot;match()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 前置通知...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">“”</p><p><a href="https://blog.csdn.net/lk7688535/article/details/51989746">*(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数</a></p></div><h2 id="切面的管理"><a href="#切面的管理" class="headerlink" title="切面的管理"></a>切面的管理</h2><blockquote><p>新建<code>Aspect</code>包对切面进行统一管理，并新建<code>CheckUserAscpect.java</code>类</p></blockquote><ul><li><code>@Aspect</code>注解声明这个类是一个切面</li><li><code>@Component</code>注解，将这个类标记为Spring容器中的一个Bean，这样就可以使用其它注解了（<code>@Autowired</code>）</li><li>使用<code>CheckUserService.java</code>这个类，实现逻辑处理</li><li>编写切入点，<code>@Pointcut(&quot;@annotation(com.mysqlapi.Annotation.adminOnly)&quot;)</code>，其中参数用来指定在何处插入，此处表示<code>在使用了（自定义）注解@adminOnly处切入</code>，也可以使用<code>execution表达式进行拦截</code><ul><li>切入点方法为<code>checkAdmin()</code></li></ul></li><li>编写通知，决定了何时执行，以<code>@Before</code>通知为例，即在执行操作前，检查用户是否为管理员。<code>@Before(&quot;checkAdmin()&quot;)</code>其中的参数为<code>切入点的方法</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.Aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.service.CheckUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckUserAscpect</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CheckUserService checkUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Pointcut(&quot;@annotation(com.mysqlapi.Annotation.adminOnly)&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkAdmin</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(&quot;checkAdmin()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">checkUserService.check();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="修改之前的权限验证"><a href="#修改之前的权限验证" class="headerlink" title="修改之前的权限验证"></a>修改之前的权限验证</h1><blockquote><p>UserService.java</p></blockquote><ul><li>在<code>addUser()</code>方法前，添加注解<code>@adminOnly</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.Aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.service.CheckUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckUserAscpect</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CheckUserService checkUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Pointcut(&quot;@annotation(com.mysqlapi.Annotation.adminOnly)&quot;)</span></span><br><span class="line"><span class="comment">//@Pointcut(&quot;execution(public * com.mysqlapi.service.*.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkAdmin</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(&quot;checkAdmin()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">checkUserService.check();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Before(&quot;checkAdmin()&quot;)</span></span><br><span class="line"><span class="comment">//public void before(JoinPoint joinPoint)&#123;</span></span><br><span class="line"><span class="comment">//System.out.println(&quot;[前置通知]&quot;+joinPoint);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>进行单元测试</p></blockquote><p>UserServiceTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.holder.CurrentUserHolder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserServiceTest2</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">CurrentUserHolder.set(<span class="string">&quot;sds&quot;</span>);</span><br><span class="line">userService.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testAddUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">CurrentUserHolder.set(<span class="string">&quot;sds&quot;</span>);</span><br><span class="line">userService.addUser();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样可以实现，权限控制。这种添加自定义注解的方式，比在每有一个方法都要添加<code>check()</code>和<code>throws Exception</code>要更加简洁，但还是需要对每个需要权限的方法添加注解。</p><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\image-20230313172948144.png" alt="image-20230313172948144"></p><blockquote><p>用execution表达式的单元测试</p></blockquote><p>AspectTestUserService1.java  &lt;– 这个是service包中的文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AspectTestUserService1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;AspectTestUserService1 查找成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;AspectTestUserService1 插入成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AspectTestUserService1Test.java &lt;– 单元测试文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AspectTestUserService1Test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> AspectTestUserService1 aspectTestUserService1;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span> &#123;</span><br><span class="line">aspectTestUserService1.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testAddUser</span><span class="params">()</span> &#123;</span><br><span class="line">aspectTestUserService1.addUser();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="excution表达式"><a href="#excution表达式" class="headerlink" title="excution表达式"></a>excution表达式</h2><p>语法格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution (* com.sample.service.impl..*.*(..))</span><br></pre></td></tr></table></figure><p>  整个表达式可以分为五个部分：</p><p>1、execution(): 表达式主体。</p><p> 2、第一个<em>号：表示返回类型，</em>号表示所有的类型。</p><p> 3、包名：表示需要拦截的包名，后面的两个句点表示当前包和当前包的所有子包，com.sample.service.impl包、子孙包下所有类的方法。</p><p> 4、第二个<em>号：表示类名，</em>号表示所有的类。</p><p> 5、*(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数。</p>]]></content>
    
    
    <summary type="html">自用的学习笔记。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://asucanyh-cn.github.io/tags/Java/"/>
    
    <category term="Spring" scheme="http://asucanyh-cn.github.io/tags/Spring/"/>
    
    <category term="AOP" scheme="http://asucanyh-cn.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>Java之SpringBoot数据库API Part2</title>
    <link href="http://asucanyh-cn.github.io/posts/1059130365/"/>
    <id>http://asucanyh-cn.github.io/posts/1059130365/</id>
    <published>2023-03-10T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://asucanyh-cn.github.io/posts/2953060011/">接上一节，SpringBoot数据库API</a></p></blockquote><h1 id="数据库事务"><a href="#数据库事务" class="headerlink" title="数据库事务"></a>数据库事务</h1><blockquote><p>TestTransController.java</p></blockquote><ul><li>事务，要么完全执行，要么完全不执行。</li><li>添加<code>@Transactional</code>注解，表明操作为事务。</li></ul><p>当不加注解运行时，第一条记录会被添加至表中，但第二条记录会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.repository.UserRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.transaction.Transactional;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransController</span> &#123;</span><br><span class="line"><span class="comment">//实例化接口</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserRepository repository;</span><br><span class="line"><span class="comment">//注意：数据库要改为InnoDB引擎</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/create2Users&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create2Users</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user1.setUserName(<span class="string">&quot;test1&quot;</span>);</span><br><span class="line">    user1.setRole(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    repository.save(user1);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user1.setUserName(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">    user2.setRole(<span class="string">&quot;10&quot;</span>); <span class="comment">//此操作会报错</span></span><br><span class="line">    repository.save(user2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><blockquote><p>对软件最小可测试单元（Java，即类）进行测试。</p></blockquote><h2 id="添加依赖工具"><a href="#添加依赖工具" class="headerlink" title="添加依赖工具"></a>添加依赖工具</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span></span><br><span class="line">junit</span><br><span class="line"><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="进入单元测试"><a href="#进入单元测试" class="headerlink" title="进入单元测试"></a>进入单元测试</h2><blockquote><p><a href="https://blog.csdn.net/qq_44309044/article/details/102687627">eclipse进入单元测试</a></p></blockquote><p>在我们写好一个类时，我们可以使用单元测试对里面的方法进行测试。</p><p>可以借助<code>junit</code>中的<code>Assert</code>类，提供的方法。</p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230311093458113.png" alt="image-20230311093458113"></p><blockquote><p>执行单元测试类</p></blockquote><p>在<code>class &lt;classname&gt; &#123;&#125;</code>前添加注解</p><ul><li>@RunWith(SpringRunner.<strong>class</strong>)</li><li>@SpringBootTest</li></ul><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><p>不同的用户拥有不同的角色，不同角色的权限不同，可以执行的操作也不一样。如何在SpringBoot中实现对权限的控制呢？</p><p>实现简单的权限管理，我们可以使用cookie、session、线程存储、数据库等。</p><h2 id="示例：线程本地存储"><a href="#示例：线程本地存储" class="headerlink" title="示例：线程本地存储"></a>示例：线程本地存储</h2><blockquote><p>CurrentUserHolder.java</p></blockquote><p>这个类创建了两个方法：</p><ol><li>get()，用户获取线程存储中的数据</li><li>set()，设置线程存储中的数据</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.holder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CurrentUserHolder</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;String&gt; holder = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> holder.get()==<span class="literal">null</span>?<span class="string">&quot;null&quot;</span>:holder.get();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(String username)</span> &#123;</span><br><span class="line">holder.set(username);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">ThreadLocal相关问题</p><p><a href="https://www.zhihu.com/question/477411483">ThreadLocal一个线程只能存放一个变量吗？想存多个怎么搞？</a></p></div><blockquote><p>CheckUserService.java</p></blockquote><p>service层</p><ul><li>进行身份的检查，若不匹配则抛出异常</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.holder.CurrentUserHolder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckUserService</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">String user=CurrentUserHolder.get();</span><br><span class="line"><span class="keyword">if</span>(!user.equals(<span class="string">&quot;admin&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;[异常]你不是管理员&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>UserService.java</p></blockquote><p>service层</p><ul><li>实例化CheckUserService</li><li>在每个UserService的方法中（以<code>findAll()</code>为例），加入CheckUserService检查（调用<code>check()</code>方法），设置抛出异常（<code>throws Exception</code>）。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CheckUserService checkUserService;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">checkUserService.check();</span><br><span class="line">System.out.println(<span class="string">&quot;查找成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition info"><p>使用这种方法进行权限管理，我们会发现在<code>UserService.java</code>中，每有一个方法需要权限都要添加<code>check()</code>和<code>throws Exception</code>这样使得我们的代码显得冗余、低效。如何解决呢？这就需要我们学习<code>AOP面向切面编程</code>。在下一节将进行学习。</p></div><br>]]></content>
    
    
    <summary type="html">自用的学习笔记。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://asucanyh-cn.github.io/tags/Java/"/>
    
    <category term="SpringBoot" scheme="http://asucanyh-cn.github.io/tags/SpringBoot/"/>
    
    <category term="Mysql" scheme="http://asucanyh-cn.github.io/tags/Mysql/"/>
    
    <category term="Restful API" scheme="http://asucanyh-cn.github.io/tags/Restful-API/"/>
    
  </entry>
  
  <entry>
    <title>Java之SpringBoot数据库API</title>
    <link href="http://asucanyh-cn.github.io/posts/2953060011/"/>
    <id>http://asucanyh-cn.github.io/posts/2953060011/</id>
    <published>2023-03-09T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://lptexas.top/posts/581298918/">接上一节，SpringBoot连接数据库。</a></p></blockquote><p>设计操作数据库的API，让数据库操作更加便捷。</p><h1 id="设计Restful-API"><a href="#设计Restful-API" class="headerlink" title="设计Restful API"></a>设计Restful API</h1><table><thead><tr><th>请求方式</th><th>路径</th><th>功能</th></tr></thead><tbody><tr><td>GET</td><td>&#x2F;users</td><td>获取所有用户信息</td></tr><tr><td>GET</td><td>&#x2F;users&#x2F;{id}</td><td>查询单条记录</td></tr><tr><td>POST</td><td>&#x2F;adduser</td><td>创建一条用户记录</td></tr><tr><td>PUT</td><td>&#x2F;users&#x2F;{id}</td><td>更新单条记录</td></tr></tbody></table><h1 id="创建数据库接口"><a href="#创建数据库接口" class="headerlink" title="创建数据库接口"></a>创建数据库接口</h1><blockquote><p>UserRepository.java</p></blockquote><ul><li>继承<code>JpaRepository接口</code></li><li>可以自定义一些方法。此处我选择直接使用继承的方法，就不写其它东西了。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JpaRepository接口类"><a href="#JpaRepository接口类" class="headerlink" title="JpaRepository接口类"></a>JpaRepository接口类</h2><blockquote><p>这个接口又继承了<code>ListCrudRepository&lt;T, ID&gt;</code>和<code>ListPagingAndSortingRepository&lt;T, ID&gt;</code></p></blockquote><p>这些接口为我们封装了很多方法。具体请创建之后，点进去查看。</p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230310192452411.png" alt="image-20230310192452411"></p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230310192534454.png" alt="image-20230310192534454"></p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230310192606010.png" alt="image-20230310192606010"></p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230310192546820.png" alt="image-20230310192546820"></p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230310192728513.png" alt="image-20230310192728513"></p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230310192652324.png" alt="image-20230310192652324"></p><h1 id="完善Controller"><a href="#完善Controller" class="headerlink" title="完善Controller"></a>完善Controller</h1><blockquote><p>UserController.java</p><p>+查询记录</p><p>+增加记录</p><p>+删除记录</p><p>+更改记录</p></blockquote><ul><li>初始化接口</li><li>添加注解<code>@Autowired</code></li><li>添加<code>@GetMapping、@PostMapping</code>等，实现对应的接口方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserRepository repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取所有记录</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getAll</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> repository.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询单条记录</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/users/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">findById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> repository.findById(id).orElse(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一条记录</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/adduser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">addUser</span><span class="params">(<span class="meta">@RequestParam(&quot;usrn&quot;)</span> String usrn, <span class="meta">@RequestParam(&quot;pswd&quot;)</span> String pswd, <span class="meta">@RequestParam(&quot;role&quot;)</span> String role)</span> &#123;</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setUserName(usrn);</span><br><span class="line">user.setPassword(pswd);</span><br><span class="line">user.setRole(role);</span><br><span class="line"><span class="keyword">return</span> repository.save(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改一条记录</span></span><br><span class="line"><span class="meta">@PutMapping(&quot;/users/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">updateUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer PathId, <span class="meta">@RequestParam(&quot;id&quot;)</span> Integer id, <span class="meta">@RequestParam(&quot;usrn&quot;)</span> String usrn, <span class="meta">@RequestParam(&quot;pswd&quot;)</span> String pswd, <span class="meta">@RequestParam(&quot;role&quot;)</span> String role)</span> &#123;</span><br><span class="line">Optional&lt;User&gt; optional = repository.findById(id);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="comment">// 是否存在该用户，不存在则返回null</span></span><br><span class="line"><span class="comment">// 方法一（推荐）</span></span><br><span class="line">optional.orElse(<span class="literal">null</span>);</span><br><span class="line"><span class="comment">//// 方法二</span></span><br><span class="line"><span class="comment">//if(optional.isPresent()) &#123;</span></span><br><span class="line"><span class="comment">//user=optional.get();</span></span><br><span class="line"><span class="comment">//&#125;else &#123;</span></span><br><span class="line"><span class="comment">//return null;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">if</span> (id.toString()!= <span class="literal">null</span>&amp;&amp;id.toString()!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setId(id);</span><br><span class="line">&#125; &#123;</span><br><span class="line">user.setId(optional.get().getId());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (usrn != <span class="literal">null</span>&amp;&amp; usrn!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setUserName(usrn);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">user.setUserName(optional.get().getUserName());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pswd != <span class="literal">null</span>&amp;&amp; pswd!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setPassword(pswd);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">user.setPassword((optional.get().getPassword()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (role != <span class="literal">null</span>&amp;&amp; role!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setRole(role);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">user.setRole(optional.get().getRole());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> repository.save(user);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">如果在这一步结束，能成功运行吗？</p><p>答案是报错<code>java.lang.IllegalArgumentException: Could not resolve domain type of interface com.mysqlapi.UserRepository</code>，为什么呢？原因是继承<code>jpaRepository</code>时未指定两个类型，即<code>&lt;对应实体类,主键的数据类型&gt;</code></p></div><blockquote><p>修改UserRepository.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;User,Integer&gt;&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h1><blockquote><p>run as spring boot app</p></blockquote><p>当前的程序还是存在问题，使用PUT更新记录时，当<code>id</code>为<code>空（非null）</code>时，会报错；当<code>某个参数</code>为<code>null</code>时，仍然报错（似乎<code>!=null</code>语句未生效）。思考为什么会发生这种问题？如何解决？</p><div class="admonition note"><p class="admonition-title">数据库中`<tablename>_sequence`表的作用</p><p>该表指定了下一个记录的自增值。用<code>next_val</code>字段表示。如果使用接口插入数据失败，有可能是这里出错，日志中会报错<code>Duplicate entry 'xxx' for key 'xxx.PRIMARY'</code>。只需要修改一下自增值即可。</p></div><h1 id="处理数据库乱码问题"><a href="#处理数据库乱码问题" class="headerlink" title="处理数据库乱码问题"></a>处理数据库乱码问题</h1><blockquote><p>统一项目和数据库中使用的编码。</p></blockquote><h2 id="数据库连接时设置编码"><a href="#数据库连接时设置编码" class="headerlink" title="数据库连接时设置编码"></a>数据库连接时设置编码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/managerSys?useUnicode=true&amp;characterEncoding=utf8</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">自用的学习笔记。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://asucanyh-cn.github.io/tags/Java/"/>
    
    <category term="SpringBoot" scheme="http://asucanyh-cn.github.io/tags/SpringBoot/"/>
    
    <category term="Mysql" scheme="http://asucanyh-cn.github.io/tags/Mysql/"/>
    
    <category term="Restful API" scheme="http://asucanyh-cn.github.io/tags/Restful-API/"/>
    
  </entry>
  
  <entry>
    <title>Java之SpringBoot连接数据库</title>
    <link href="http://asucanyh-cn.github.io/posts/581298918/"/>
    <id>http://asucanyh-cn.github.io/posts/581298918/</id>
    <published>2023-03-09T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Hibernate</li><li>SpringBoot</li></ul><h1 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1><ol><li>jpa用于连接增删改数据库的</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>mysql连接驱动</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我使用下面这个驱动会报错 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h1><blockquote><p>修改<code>application.properties</code>或同目录新建<code>application.yml</code></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.31.5:3306/managerSys</span> </span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jc.jdbc.Driver</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">driver-class-name</p><p><a href="https://blog.csdn.net/a907691592/article/details/96876030">com.mysql.jdbc.Driver和com.mysql.jc.jdbc.Drive的区别</a></p></div><blockquote><p>建议添加的配置</p><p>hibernate是一种对象关系映射框架，hibernate可以实现自动建表。</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jpa:</span> </span><br><span class="line">   <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">hibernate:</span> </span><br><span class="line">        <span class="attr">ddl-auto:</span> <span class="string">create</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">hibernate的5个模式</p><p>见下文。</p></div><h1 id="hibernate的5个模式"><a href="#hibernate的5个模式" class="headerlink" title="hibernate的5个模式"></a><a href="https://blog.csdn.net/qq_28681387/article/details/97614983">hibernate的5个模式</a></h1><blockquote><p>DDL（Data Definition Language），即数据定义语言，例如建数据库、建表等，都属于数据定义语言。</p></blockquote><h2 id="create模式"><a href="#create模式" class="headerlink" title="create模式"></a>create模式</h2><p>每次运行项目，没有表会新建表，如果表内有数据会被清空</p><h2 id="create-drop模式"><a href="#create-drop模式" class="headerlink" title="create-drop模式"></a>create-drop模式</h2><p>每次运行项目，没有表会新建表，并且每次程序结束后，删除表。</p><h2 id="update模式"><a href="#update模式" class="headerlink" title="update模式"></a>update模式</h2><p>没有表格会新建，不会删除数据，只会对表进行更新操作。</p><h2 id="validate模式"><a href="#validate模式" class="headerlink" title="validate模式"></a>validate模式</h2><p>校验模式，校验字段数据类型是否相同，不同则报错。</p><h2 id="none模式"><a href="#none模式" class="headerlink" title="none模式"></a>none模式</h2><p>关闭ddl，什么都不做，每次启动项目，不会对数据库进行任何验证和操作。</p><h1 id="演示Hibernate自动建表"><a href="#演示Hibernate自动建表" class="headerlink" title="演示Hibernate自动建表"></a>演示Hibernate自动建表</h1><h2 id="新建Entity"><a href="#新建Entity" class="headerlink" title="新建Entity"></a>新建Entity</h2><blockquote><p>User.java</p></blockquote><ul><li>定义成员变量</li><li>@id，设置变量对应为主键</li><li>@GeneratedValue，设置变量为自增</li><li>一键生成getter、setter方法，以及一个无参的构造方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String userName;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123; <span class="comment">//构造函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> userName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.userName = userName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新建Controller"><a href="#新建Controller" class="headerlink" title="新建Controller"></a>新建Controller</h2><blockquote><p>StudentController.java</p></blockquote><ul><li>暂时啥也不写</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentController</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><blockquote><p>run  as spring boot app</p></blockquote><p>日志中可以观察到，<code>show-sql: true</code>正常工作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Hibernate: <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> <span class="keyword">user</span></span><br><span class="line">Hibernate: <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> user_seq</span><br><span class="line">Hibernate: <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span> (id <span class="type">integer</span> <span class="keyword">not</span> <span class="keyword">null</span>, password <span class="type">varchar</span>(<span class="number">255</span>), role <span class="type">varchar</span>(<span class="number">255</span>), user_name <span class="type">varchar</span>(<span class="number">255</span>), <span class="keyword">primary</span> key (id)) engine<span class="operator">=</span>InnoDB</span><br><span class="line">Hibernate: <span class="keyword">create</span> <span class="keyword">table</span> user_seq (next_val <span class="type">bigint</span>) engine<span class="operator">=</span>InnoDB</span><br><span class="line">Hibernate: <span class="keyword">insert</span> <span class="keyword">into</span> user_seq <span class="keyword">values</span> ( <span class="number">1</span> )</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>查看数据库，可以发现已经成功创建！</p><p><img src="https://asucanyh-cn.github.io/img/post/image-20230310184516354.png" alt="image-20230310184516354"></p><div class="admonition caution"><p class="admonition-title">ddl-auto使用注意</p><p>一般情况下，<code>ddl-auto</code>使用<code>update</code>模式最安全。</p></div><br>]]></content>
    
    
    <summary type="html">自用的学习笔记。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://asucanyh-cn.github.io/tags/Java/"/>
    
    <category term="SpringBoot" scheme="http://asucanyh-cn.github.io/tags/SpringBoot/"/>
    
    <category term="Mysql" scheme="http://asucanyh-cn.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Java之ArrayList动态数组</title>
    <link href="http://asucanyh-cn.github.io/posts/862504134/"/>
    <id>http://asucanyh-cn.github.io/posts/862504134/</id>
    <published>2023-03-07T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>参阅：<a href="https://www.runoob.com/java/java-arraylist.html">https://www.runoob.com/java/java-arraylist.html</a></p><h1 id="什么是ArrayList"><a href="#什么是ArrayList" class="headerlink" title="什么是ArrayList?"></a>什么是ArrayList?</h1><blockquote><p>ArrayList 类是一个可以动态修改的数组，与普通数组的区别就是它是没有固定大小的限制，我们可以添加或删除元素。</p><p>ArrayList 继承了 AbstractList ，并实现了 List 接口。</p></blockquote><h2 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList; <span class="comment">// 引入 ArrayList 类</span></span><br><span class="line"></span><br><span class="line">ArrayList&lt;E&gt; objectName =<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();　 <span class="comment">// 初始化</span></span><br></pre></td></tr></table></figure><h1 id="ArrayList提供的方法"><a href="#ArrayList提供的方法" class="headerlink" title="ArrayList提供的方法"></a>ArrayList提供的方法</h1><h2 id="add方法"><a href="#add方法" class="headerlink" title="add方法"></a>add方法</h2><blockquote><p>添加元素至数组中。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList; <span class="comment">// 引入 ArrayList 类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestArrayList</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">ArrayList&lt;String&gt; animals =<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;(); <span class="comment">// 初始化</span></span><br><span class="line">animals.add(<span class="string">&quot;dog&quot;</span>);</span><br><span class="line">animals.add(<span class="string">&quot;cat&quot;</span>);</span><br><span class="line">System.out.println(animals);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#output</span><br><span class="line">[dog, cat]</span><br></pre></td></tr></table></figure><h2 id="get方法"><a href="#get方法" class="headerlink" title="get方法"></a>get方法</h2><blockquote><p>访问元素。</p><p>注意：列表中的索引从0开始。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.get(index);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(animals.get(<span class="number">0</span>));</span><br></pre></td></tr></table></figure><h2 id="set方法"><a href="#set方法" class="headerlink" title="set方法"></a>set方法</h2><blockquote><p>修改元素。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.set(index,value);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animals.set(<span class="number">0</span>,<span class="string">&quot;monkey&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="remove方法"><a href="#remove方法" class="headerlink" title="remove方法"></a>remove方法</h2><blockquote><p>删除元素。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.remove(index);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animals.remove(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="size方法"><a href="#size方法" class="headerlink" title="size方法"></a>size方法</h2><blockquote><p>输出元素个数。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.size();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(animals.size());</span><br></pre></td></tr></table></figure><h1 id="遍历数组列表中的元素的技巧"><a href="#遍历数组列表中的元素的技巧" class="headerlink" title="遍历数组列表中的元素的技巧"></a>遍历数组列表中的元素的技巧</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span><span class="params">(int i : myNumbers)</span></span></span><br></pre></td></tr></table></figure><p>等价于:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(int i <span class="operator">=</span> <span class="number">0</span><span class="comment">; i &lt; myNumbers.size(); i++）&#123;</span></span><br><span class="line">    int j <span class="operator">=</span> myNumbers.get(i)<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">自用的学习笔记。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://asucanyh-cn.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Python之matplotlib模块</title>
    <link href="http://asucanyh-cn.github.io/posts/2723459680/"/>
    <id>http://asucanyh-cn.github.io/posts/2723459680/</id>
    <published>2023-03-07T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>参阅：<a href="http://c.biancheng.net/matplotlib">http://c.biancheng.net/matplotlib</a></p><h1 id="使用matplotlib绘制可视化图形"><a href="#使用matplotlib绘制可视化图形" class="headerlink" title="使用matplotlib绘制可视化图形"></a>使用matplotlib绘制可视化图形</h1><h1 id="正确显示中文"><a href="#正确显示中文" class="headerlink" title="正确显示中文"></a>正确显示中文</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt<span class="selector-class">.rcParams</span><span class="selector-attr">[<span class="string">&#x27;font.sans-serif&#x27;</span>]</span>=<span class="selector-attr">[<span class="string">&#x27;SimHei&#x27;</span>]</span>#正确显示汉字</span><br><span class="line">plt<span class="selector-class">.rcParams</span><span class="selector-attr">[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]</span>=False #正确显示负号</span><br></pre></td></tr></table></figure><h1 id="axes类"><a href="#axes类" class="headerlink" title="axes类"></a>axes类</h1><h2 id="legend函数"><a href="#legend函数" class="headerlink" title="legend函数"></a>legend函数</h2><blockquote><p>创建图例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ax.legend(handles, labels, loc)</span><br></pre></td></tr></table></figure><ul><li>labels 是一个字符串序列，用来指定标签的名称；</li><li>loc 是指定图例位置的参数，其参数值可以用字符串或整数来表示；</li><li>handles 参数，它也是一个序列，它包含了所有线型的实例；</li><li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html">更多参数</a>（frameon,ncol等等）</li></ul><h1 id="报错解决方案"><a href="#报错解决方案" class="headerlink" title="报错解决方案"></a>报错解决方案</h1><blockquote><p><a href="https://blog.csdn.net/Crazy__1/article/details/103903962">This application failed to start because it could not find or load the Qt platform plugin “windows”<br>in “”.<br>Reinstalling the application may fix this problem.</a><br>将D:\python36\Library\plugins目录下的platform文件夹复制到D:\python36下。D:\python36是<a href="https://so.csdn.net/so/search?q=anaconda&spm=1001.2101.3001.7020">anaconda</a>安装目录。</p></blockquote>]]></content>
    
    
    <summary type="html">Python学习笔记</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="http://asucanyh-cn.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python之pandas模块</title>
    <link href="http://asucanyh-cn.github.io/posts/2301760283/"/>
    <id>http://asucanyh-cn.github.io/posts/2301760283/</id>
    <published>2023-03-07T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>   Pandas 名字衍生自术语 “panel data”（面板数据）和 “Python data analysis”，一 个强大的分析结构化数据的工具集，基础是 Numpy，可以从各种文件格式比如 CSV、SQL、 Excel 导入数据，对各种数据进行运算操作，比如归并、再成形、选择，还有数据清洗和数 据加工特征。Pandas 广泛应用在学术、金融、统计学等各个数据分析领域。Pandas 的主要 数据结构是 Series （一维数据）与 DataFrame（二维数据）</p><h1 id="Series对象"><a href="#Series对象" class="headerlink" title="Series对象"></a>Series对象</h1><blockquote><p>Series 是一个一维数据，Pandas 会默认用 0 到 n-1 来作为 Series 的 index, 但也可以自己 指定 index（可以把 index 理解为 dict 里面的 key）</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.Series( data, index, dtype, name, copy)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>data</strong>：一组数据(ndarray 类型)。</li><li><strong>index</strong>：数据索引标签，如果不指定，默认从 0 开始。</li><li><strong>dtype</strong>：数据类型，默认会自己判断。</li><li><strong>name</strong>：设置名称。</li><li><strong>copy</strong>：拷贝数据，默认为 False。</li></ul><p><img src="https://asucanyh-cn.github.io/img/post/pandas-series.jpg"></p><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><h2 id="data为字典"><a href="#data为字典" class="headerlink" title="data为字典"></a>data为字典</h2><blockquote><p>默认根据字典的键码字符串顺序排序，也可以设定顺序。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="string">&quot;ton&quot;</span>: <span class="number">20</span>, <span class="string">&quot;mary&quot;</span>: <span class="number">18</span>, <span class="string">&quot;jack&quot;</span>: <span class="number">19</span>, <span class="string">&quot;car&quot;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">sa = pd.Series(s)</span><br><span class="line"><span class="built_in">print</span>(sa)  <span class="comment"># 默认根据字典的键码字符串顺序排序</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">car      NaN</span></span><br><span class="line"><span class="string">jack    19.0</span></span><br><span class="line"><span class="string">mary    18.0</span></span><br><span class="line"><span class="string">ton     20.0</span></span><br><span class="line"><span class="string">dtype: float64</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">## 指定顺序</span></span><br><span class="line">sa = pd.Series(s, index=[<span class="string">&#x27;ton&#x27;</span>, <span class="string">&#x27;mary&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;car&#x27;</span>]) <span class="comment">#指定顺序&#x27;ton&#x27;, &#x27;mary&#x27;, &#x27;jack&#x27;, &#x27;car&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(sa)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">ton     20.0</span></span><br><span class="line"><span class="string">mary    18.0</span></span><br><span class="line"><span class="string">jack    19.0</span></span><br><span class="line"><span class="string">car      NaN</span></span><br><span class="line"><span class="string">dtype: float64</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Pandas数据框（DataFrame）"><a href="#Pandas数据框（DataFrame）" class="headerlink" title="Pandas数据框（DataFrame）"></a>Pandas数据框（DataFrame）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.DataFrame( data, index, columns, dtype, copy)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>data</strong>：一组数据(ndarray、series, map, lists, dict 等类型)。</li><li><strong>index</strong>：索引值，或者可以称为行标签。</li><li><strong>columns</strong>：列标签，默认为 RangeIndex (0, 1, 2, …, n) 。</li><li><strong>dtype</strong>：数据类型。</li><li><strong>copy</strong>：拷贝数据，默认为 False。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pandas数据框</span></span><br><span class="line">data = &#123;<span class="string">&#x27;id&#x27;</span>: [<span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Mike&#x27;</span>],</span><br><span class="line"> <span class="string">&#x27;age&#x27;</span>: [<span class="number">18</span>, <span class="number">35</span>, <span class="number">20</span>],</span><br><span class="line"> <span class="string">&#x27;cash&#x27;</span>: [<span class="number">10.53</span>, <span class="number">500.7</span>, <span class="number">13.6</span>]&#125;</span><br><span class="line">df = pd.DataFrame(data) <span class="comment">#调用构造函数并将结果赋值给 df</span></span><br><span class="line"><span class="built_in">print</span>(df) <span class="comment"># 默认根据字典的键码字符串顺序排序</span></span><br><span class="line"><span class="comment">## 指定顺序</span></span><br><span class="line">df = pd.DataFrame(data,index=[<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;cash&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><h3 id="对-DataFrame-对象增加列"><a href="#对-DataFrame-对象增加列" class="headerlink" title="对 DataFrame 对象增加列"></a>对 DataFrame 对象增加列</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">df[&quot;rich&quot;]=df[&quot;cash&quot;]&gt;200</span><br><span class="line">print(df)</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">      age    cash     id   rich</span><br><span class="line">id     18   10.53   Jack  False</span><br><span class="line">age    35  500.70  Sarah   True</span><br><span class="line">cash   20   13.60   Mike  False</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 指定列的顺序</span></span><br><span class="line"><span class="attribute">df2</span>=pd.DataFrame(data,columns=[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;cash&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(df2)</span><br></pre></td></tr></table></figure><h2 id="数据框索引"><a href="#数据框索引" class="headerlink" title="数据框索引"></a><a href="https://blog.csdn.net/qq_41913559/article/details/107561309">数据框索引</a></h2><p>①iloc 主要使用数字来索引数据，而不能使用字符型的标签来索引数据。而 loc 则刚好 相反，只能使用字符型标签来索引数据，不能使用数字来索引数据。注意：数字索引范围不 包括结尾，而字符索引范围包括结尾。</p><p>②ix 是一种混合索引，字符型标签和整型数据索引都可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 数据引用</span></span><br><span class="line"><span class="comment">### 引用列、切片、定位某个数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df2[<span class="string">&quot;id&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(df2.iloc[<span class="number">0</span>:<span class="number">2</span>,<span class="number">0</span>:<span class="number">2</span>]) <span class="comment"># 逗号左侧为行，右侧为列</span></span><br><span class="line"><span class="built_in">print</span>(df2.iloc[:])</span><br></pre></td></tr></table></figure><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><h2 id="删除空值的行-x2F-列"><a href="#删除空值的行-x2F-列" class="headerlink" title="删除空值的行&#x2F;列"></a><a href="https://blog.csdn.net/qq_17753903/article/details/89817371">删除空值的行&#x2F;列</a></h2><blockquote><p>语法格式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataFrame.dropna(axis=<span class="number">0</span>, how=<span class="string">&#x27;any&#x27;</span>, thresh=<span class="literal">None</span>, subset=<span class="literal">None</span>, inplace=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><blockquote><p>参数详解</p></blockquote><ul><li><p>axis：轴。0或’index’，表示按行删除；1或’columns’，表示按列删除。</p></li><li><p>how：筛选方式。‘any’，表示该行&#x2F;列只要有一个以上的空值，就删除该行&#x2F;列；‘all’，表示该行&#x2F;列全部都为空值，就删除该行&#x2F;列。</p></li><li><p>thresh：非空元素最低数量。int型，默认为None。如果该行&#x2F;列中，非空元素数量小于这个值，就删除该行&#x2F;列。</p></li><li><p>subset：子集。列表，元素为行或者列的索引。如果axis&#x3D;0或者‘index’，subset中元素为列的索引；如果axis&#x3D;1或者‘column’，subset中元素为行的索引。由subset限制的子区域，是判断是否删除该行&#x2F;列的条件判断区域。</p></li><li><p>inplace：是否原地替换。布尔值，默认为False。如果为True，则在原DataFrame上进行操作，返回值为None。</p></li></ul><blockquote><p>案例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;titanic.csv&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.head().to_string())</span><br><span class="line"><span class="comment"># print(df.describe().to_string())</span></span><br><span class="line"><span class="comment"># print(df.describe(include=&#x27;all&#x27;).to_string())</span></span><br><span class="line"><span class="comment">## 删除空值的行</span></span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&#x27;age&#x27;</span>].isnull())</span><br><span class="line">new_df=df.dropna(subset=[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(new_df.describe().to_string())</span><br><span class="line"><span class="built_in">print</span>(new_df[<span class="string">&#x27;age&#x27;</span>].isnull().head())</span><br></pre></td></tr></table></figure><h3 id="填充空值"><a href="#填充空值" class="headerlink" title="填充空值"></a>填充空值</h3><blockquote><p>语法结构</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataFrame.fillna(value=<span class="literal">None</span>, method=<span class="literal">None</span>, axis=<span class="literal">None</span>, inplace=<span class="literal">False</span>, limit=<span class="literal">None</span>, downcast=<span class="literal">None</span>, **kwargs)</span><br></pre></td></tr></table></figure><blockquote><p>参数详解</p></blockquote><ul><li>value: 变量、字典、Series，DataFrame；用于填充填充缺失值，或指定为每个索引（对于Series）或列（对于DataFrame）的缺失值使用字典&#x2F;Series&#x2F;DataFrame的值填充</li><li>method: {‘backfill’, ‘bfill’, ‘pad’, ‘ffill’, None}, 默认None， pad&#x2F;ffill表示向后填充空值，backfill&#x2F;bfill表示向前填充空值</li><li>axis: {0 or ‘index’, 1 or ‘columns’}</li><li>inplace: boolean, 默认为False。若为True， 在原地填满</li><li>limit: int, 默认为None， 如果指定了方法， 则这是连续的NaN值的前向&#x2F;后向填充的最大数量</li><li>downcast: dict, 默认None， 字典中的项为类型向下转换规则。</li></ul><blockquote><p>案例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">round</span>(df[<span class="string">&#x27;age&#x27;</span>].mean(),<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">df[<span class="string">&#x27;age&#x27;</span>].fillna(x,inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(df.head().to_string())</span><br></pre></td></tr></table></figure><h3 id="转换列的日期格式"><a href="#转换列的日期格式" class="headerlink" title="转换列的日期格式"></a><a href="https://www.delftstack.com/zh/howto/python-pandas/how-to-convert-dataframe-column-to-datetime-in-pandas/#:~:text=%E5%A6%82%E4%BD%95%E5%9C%A8%20Pandas%20%E4%B8%AD%E5%B0%86%20DataFrame%20%E5%88%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%201%20Pandas%20to_datetime,%E6%96%B9%E6%B3%95%E5%B0%86%20DataFrame%20%E5%88%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%20Datetime%203%20%E5%B0%86%20DataFrame%20%E5%88%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E6%96%B9%E6%B3%95%E7%9A%84%E6%80%A7%E8%83%BD%E6%AF%94%E8%BE%83">转换列的日期格式</a></h3><blockquote><p>语法格式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.to_datetime(param, <span class="built_in">format</span>=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">参数详解</p><p><a href="https://blog.csdn.net/qq_39290225/article/details/98313743">to_datetime的参数详解</a></p></div><blockquote><p>案例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 处理日期(字符转换为日期)</span></span><br><span class="line">data=&#123;</span><br><span class="line">  <span class="string">&#x27;Date&#x27;</span>:[<span class="string">&#x27;2023/3/1&#x27;</span>,<span class="string">&#x27;2022/1/1&#x27;</span>],</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span>:[<span class="number">50</span>,<span class="number">10</span>]</span><br><span class="line">&#125;</span><br><span class="line">df=pd.DataFrame(data,index=[<span class="string">&#x27;day1&#x27;</span>,<span class="string">&#x27;day2&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line">df[<span class="string">&#x27;Date&#x27;</span>]=pd.to_datetime(df[<span class="string">&#x27;Date&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><h2 id="删除空行后重置索引"><a href="#删除空行后重置索引" class="headerlink" title="删除空行后重置索引"></a><a href="https://cloud.tencent.com/developer/article/2230126#:~:text=%E3%80%90%E6%8A%80%E5%B7%A7%E3%80%91Pandas%E4%BD%BF%E7%94%A8drop%E5%90%8E%E4%BD%BF%E7%94%A8reset_index%E9%87%8D%E7%BD%AE%E7%B4%A2%E6%80%A7%20%E6%88%91%E4%BB%AC%E5%9C%A8%E4%BD%BF%E7%94%A8%20drop,%E5%87%BD%E6%95%B0%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E5%80%BC%E7%9A%84%E8%A1%8C%E5%90%8E%EF%BC%8C%20%E5%8E%9F%E6%9D%A5%E7%9A%84%E7%B4%A2%E5%BC%95%E8%BF%98%E6%98%AF%E4%BF%9D%E7%95%99%E7%9A%84%20%EF%BC%81">删除空行后重置索引</a></h2><blockquote><p>reset_index()函数</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.reset_index(drop=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">箱线图Keyvalue:0报错</p><p>原因可能就是去除了空值，去除了index=0的元素，这个时候将索引重置就可以解决问题</p></div><h1 id="分组汇总"><a href="#分组汇总" class="headerlink" title="分组汇总"></a><a href="https://blog.csdn.net/FGH333xwy/article/details/110672407">分组汇总</a></h1><blockquote><p>groupby()核心用法总结</p></blockquote><ol><li>根据DataFrame本身的某一列或多列内容进行分组聚合:</li></ol><p>（a）若按某一列聚合，则新DataFrame将根据某一列的内容分为不同的维度进行拆解，同时将同一维度的再进行聚合，<br>（b）若按某多列聚合，则新DataFrame将是多列之间维度的笛卡尔积，即：新DataFrame具有一个层次化索引（由唯一的键对组成），例如：“key1”列，有a和b两个维度，而“key2”有one和two两个维度，则按“key1”列和“key2”聚合之后，新DataFrame将有四个group；<br>（c）通过调用get_group()函数可以返回一个按照分组得到的DataFrame对象，该对象是分组中的一种情况；<br>（d）可以将想要计算的列（可以是单列，也可以是多列）通过索引的方式取出来，然后在取出来这列数据的基础上进行汇总计算。eg：df.groupby(“状态”)[“区”]、df.groupby(“状态”)[[“区”,“省”]]</p><p>注意：groupby默认是在axis&#x3D;0上进行分组的，通过设置axis&#x3D;1，也可以在其他任何轴上进行分组。</p><ol start="2"><li>GroupBy对象结合描述统计方法从各个分组中产生标量值：</li></ol><p>（a）这个标量值可以是平均值、数量、中位数等。GroupBy对象常用的描述性统计方法如下表所示：</p><p><img src="https://asucanyh-cn.github.io/img/post/groupby.png"></p><h2 id="普通过滤"><a href="#普通过滤" class="headerlink" title="普通过滤"></a>普通过滤</h2><h2 id="分组过滤"><a href="#分组过滤" class="headerlink" title="分组过滤"></a>分组过滤</h2>]]></content>
    
    
    <summary type="html">Python学习笔记</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="http://asucanyh-cn.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>初识SpringBoot</title>
    <link href="http://asucanyh-cn.github.io/posts/3446401948/"/>
    <id>http://asucanyh-cn.github.io/posts/3446401948/</id>
    <published>2023-03-07T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot-注解有哪些？"><a href="#Spring-Boot-注解有哪些？" class="headerlink" title="Spring Boot 注解有哪些？"></a>Spring Boot 注解有哪些？</h1><ol><li>了解常见的注解以及使用的层级</li><li>了解注解的含义</li></ol><h1 id="Spring-Boot项目的层级关系"><a href="#Spring-Boot项目的层级关系" class="headerlink" title="Spring Boot项目的层级关系"></a>Spring Boot项目的层级关系</h1><h2 id="entity层"><a href="#entity层" class="headerlink" title="entity层"></a>entity层</h2><p>entity层为数据库实体层，一般一个实体类对应数据库中的一张数据表，类中的属性与数据表中的字段一 一对应。默认情况下，类名即为数据表的表名，属性名则是对应字段名，字段类型也与变量的类型相对应。</p><h3 id="Entity"><a href="#Entity" class="headerlink" title="@Entity"></a>@Entity</h3><p>该注解用于表明这个类是一个实体类，会给他生成一张对应的数据表。</p><h3 id="Table-name-x3D-“table-name”"><a href="#Table-name-x3D-“table-name”" class="headerlink" title="@Table(name &#x3D; “table_name”)"></a>@Table(name &#x3D; “table_name”)</h3><p>该注解主要用于修改表名，name的值就是修改的数据表的名称。</p><h3 id="Id"><a href="#Id" class="headerlink" title="@Id"></a>@Id</h3><p>该注解用于声明主键，标在哪个属性上面对应的哪个字段就是主键</p><h3 id="GeneratedValue-strategy-x3D-GenerationType-IDENTITY"><a href="#GeneratedValue-strategy-x3D-GenerationType-IDENTITY" class="headerlink" title="@GeneratedValue(strategy &#x3D; GenerationType.IDENTITY)"></a>@GeneratedValue(strategy &#x3D; GenerationType.IDENTITY)</h3><p>该注解的strategy属性主要用于设置主键的增长方式，IDENTITY表示主键由数据库自己生成，从1开始单调递增。</p><h3 id="Column-name-x3D-“column-name”"><a href="#Column-name-x3D-“column-name”" class="headerlink" title="@Column(name &#x3D; “column_name”)"></a>@Column(name &#x3D; “column_name”)</h3><p>该注解的name属性用于更改数据表的列名，如果不想用默认的就用这个属性改吧<br>@ManyToMany(cascade &#x3D; CascadeType.ALL, fetch &#x3D; FetchType.LAZY)<br>这个注解得上是本项目得核心了，它声明了实体之间的多对多关系，使两张数据表关联关联起来，一般是通过生成一张映射表来实现这种映射关系。关于上面的cascade属性和fetch属性，有兴趣的读者可以查资料了解。</p><h3 id="JoinTable"><a href="#JoinTable" class="headerlink" title="@JoinTable"></a>@JoinTable</h3><p>这个注解是配套@ManyToMany使用的，一般在多对多关系的维护端标注，用于生成上面提到的映射表。一般该注解常用三个属性：name属性表示生成的数据表的名称，joinColumns属性表示关系维护端的主键，inverseJoinColumns则表示关系被维护端的主键。关于嵌套在里面的@JoinColumn注解，在这里主要用于配置映射表的外键，一般有两个属性：name用于配置外键在映射表中的名称，referencedColumnName 用于表明外键在原表中的字段名称。</p><h3 id="JsonBackReference"><a href="#JsonBackReference" class="headerlink" title="@JsonBackReference"></a>@JsonBackReference</h3><p>关于这个注解，建议先去掉试试然后再加上，对比一下效果。它主要可以使标注属性避免被json序列化，进而避免多对多关系的查询中出现死循环的情况。但是加上了这注解后，就不能进行反向查询了（也就是说不能利用权限名查询拥有这个权限的角色了）</p><h2 id="repository"><a href="#repository" class="headerlink" title="repository"></a>repository</h2><p>也可以称dao层，或mapper层，是数据持久层。主要负责访问数据库，向数据库发送<a href="https://so.csdn.net/so/search?q=SQL%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020">SQL语句</a>，完成基础的增删查改任务。主要通过定义继承JpaRepository类的接口来实现，&lt;&gt;中填写的是实体类的名称和该实体主键的变量类型。</p><h2 id="service"><a href="#service" class="headerlink" title="service"></a>service</h2><p>service层是业务逻辑层，<strong>主要通过调用持久层的接口，接收持久层返回的数据，完成项目的基本功能设计</strong>。</p><h2 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h2><p>controller层是控制层，其功能为请求和响应控制，负责前后端交互，接受前端请求，调用service层，接收service层返回的数据，最后返回具体的页面和数据到客户端。</p><h3 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a><a href="https://www.w3cschool.cn/wkspring/rw2h1mmj.html">@Autowired</a></h3><p>Spring通过提供@Autowired注解来提供基于注解的自动装配。</p><p>自动装配指的就是使用将 Spring 容器中的 bean 自动的和我们需要这个 bean 的类组装在一起。</p><h3 id="Controller"><a href="#Controller" class="headerlink" title="@Controller"></a>@Controller</h3><p>处理http请求</p><h3 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h3><p>返回json（相当于@ResponseBody配合@Controller）</p><h3 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h3><p>配置url映射（可传入数组，Crtl+P查看）</p><h3 id="PathVariable"><a href="#PathVariable" class="headerlink" title="@PathVariable"></a>@PathVariable</h3><p>获取url中的数据</p><h3 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h3><p>获取请求参数的值</p><h1 id="Spring-Boot-应用属性"><a href="#Spring-Boot-应用属性" class="headerlink" title="Spring Boot 应用属性"></a><a href="https://www.cainiaojc.com/springboot/springboot-properties.html">Spring Boot 应用属性</a></h1><h1 id="SpringBoot-Starters"><a href="#SpringBoot-Starters" class="headerlink" title="SpringBoot Starters"></a><a href="https://www.cainiaojc.com/springboot/springboot-starters.html">SpringBoot Starters</a></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.eclipse.persistence&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;org.eclipse.persistence.jpa&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;<span class="number">2.6</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">SpringBoot学习笔记。</summary>
    
    
    
    <category term="计算机编程" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Mysql" scheme="http://asucanyh-cn.github.io/tags/Mysql/"/>
    
    <category term="LinuxDeploy" scheme="http://asucanyh-cn.github.io/tags/LinuxDeploy/"/>
    
  </entry>
  
  <entry>
    <title>mysql安装以及配置</title>
    <link href="http://asucanyh-cn.github.io/posts/1508968307/"/>
    <id>http://asucanyh-cn.github.io/posts/1508968307/</id>
    <published>2023-02-22T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linuxdeploy中需要为用户添加特权</span></span><br><span class="line">usermod -a -G aid_inet,aid_net_raw mysql</span><br><span class="line">usermod -a -G aid_inet,aid_net_raw root</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mysqld</span></span><br><span class="line">service mysql start </span><br></pre></td></tr></table></figure><h1 id="允许所有主机登录"><a href="#允许所有主机登录" class="headerlink" title="允许所有主机登录"></a>允许所有主机登录</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">改表法</span></span><br><span class="line">UPDATE user SET host=&#x27;%&#x27; WHERE user=&#x27;root&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">授权法</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;mypassword&#x27;</span> WITH GRANT OPTION;</span></span><br></pre></td></tr></table></figure><h1 id="修改登录授权方式"><a href="#修改登录授权方式" class="headerlink" title="修改登录授权方式"></a>修改登录授权方式</h1><p><a href="https://blog.csdn.net/cruiserblog/article/details/106934570">MySQL8.0的版本更改了root账户的授权方式，默认是auth_socket。也就是说需要通过 Unix socket 文件来验证所有连接到localhost的用户，不能使用提供密码的方式了。我们需要通过下面的指令更一下授权方式。</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">user=mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">validate_password.policy=LOW</span></span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;可访问root的主机&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;root的密码&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置密码</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="重启mysql"><a href="#重启mysql" class="headerlink" title="重启mysql"></a>重启mysql</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install mysql-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
    
    
    
    
    <category term="Mysql" scheme="http://asucanyh-cn.github.io/tags/Mysql/"/>
    
    <category term="LinuxDeploy" scheme="http://asucanyh-cn.github.io/tags/LinuxDeploy/"/>
    
  </entry>
  
  <entry>
    <title>Zerotier部署planet根节点，提高速度及稳定性</title>
    <link href="http://asucanyh-cn.github.io/posts/2649205773/"/>
    <id>http://asucanyh-cn.github.io/posts/2649205773/</id>
    <published>2023-02-13T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="admonition info"><p class="admonition-title">参阅</p><p><strong><a href="https://gitee.com/opopop880">opopop880</a></strong>.<a href="https://blog.csdn.net/opopop880/article/details/122880479">一键搭建zerotier planet服务器脚本</a>.[1]</p></div><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>需要具有公网ip的机器，开放3443、9993端口</li></ul><h1 id="安装ztncui可视化控制器"><a href="#安装ztncui可视化控制器" class="headerlink" title="安装ztncui可视化控制器"></a>安装ztncui可视化控制器</h1><blockquote><p>这里使用<a href="https://gitee.com/opopop880/zerotier_planet/blob/master/zerotier_planet.sh">火木木制作</a>大佬制作的脚本</p></blockquote><p><a href="https://gitee.com/opopop880/zerotier_planet/blob/master/zerotier_planet.sh">centos</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/opopop880/zerotier_planet/raw/master/zerotier_planet.sh &amp;&amp; chmod +x zerotier_planet.sh &amp;&amp; bash zerotier_planet.sh</span><br></pre></td></tr></table></figure><p><a href="https://gitee.com/opopop880/zerotier_planet/blob/master/zerotier_planet_debain.sh">debain</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/opopop880/zerotier_planet/raw/master/zerotier_planet_debain.sh &amp;&amp; chmod +x zerotier_planet_debain.sh &amp;&amp; bash zerotier_planet_debain.sh</span><br></pre></td></tr></table></figure><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><blockquote><p>ztncui控制器的使用方法类似zerotier官网。请自行研究，很简单。</p></blockquote><h2 id="首先，添加网络"><a href="#首先，添加网络" class="headerlink" title="首先，添加网络"></a>首先，添加网络</h2><p>设置一个网络的名称。</p><h2 id="然后，嫌麻烦可直接点击简易安装"><a href="#然后，嫌麻烦可直接点击简易安装" class="headerlink" title="然后，嫌麻烦可直接点击简易安装"></a>然后，嫌麻烦可直接点击简易安装</h2>]]></content>
    
    
    <summary type="html">部署笔记</summary>
    
    
    
    <category term="计算机网络" scheme="http://asucanyh-cn.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="Zerotier" scheme="http://asucanyh-cn.github.io/tags/Zerotier/"/>
    
  </entry>
  
  <entry>
    <title>ansible学习笔记Part5</title>
    <link href="http://asucanyh-cn.github.io/posts/632481897/"/>
    <id>http://asucanyh-cn.github.io/posts/632481897/</id>
    <published>2023-02-01T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><blockquote><p>迭代：with_items</p></blockquote><h2 id="标准循环"><a href="#标准循环" class="headerlink" title="标准循环"></a>标准循环</h2><blockquote><p>以创建多个文件和用户为例</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">centos</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">touch</span> <span class="string">some</span> <span class="string">files.</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span> <span class="string">state=touch</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">several</span> <span class="string">users.</span></span><br><span class="line">      <span class="attr">user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item.usrname</span> <span class="string">&#125;&#125;</span> <span class="string">groups=&#123;&#123;</span> <span class="string">item.groups</span> <span class="string">&#125;&#125;</span> <span class="string">state=present</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">       <span class="bullet">-</span> &#123; <span class="attr">usrname:</span> <span class="string">&#x27;user1&#x27;</span>,<span class="attr">groups:</span> <span class="string">&#x27;root&#x27;</span>&#125;</span><br><span class="line">       <span class="bullet">-</span> &#123; <span class="attr">usrname:</span> <span class="string">&#x27;user2&#x27;</span>,<span class="attr">groups:</span> <span class="string">&#x27;root&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a><a href="http://ansible.com.cn/docs/playbooks_loops.html#id19">嵌套循环</a></h2><p>循环也可以嵌套:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: give<span class="built_in"> users </span>access <span class="keyword">to</span> multiple databases</span><br><span class="line">  mysql_user: name=&#123;&#123; item[0] &#125;&#125; priv=&#123;&#123; item[1] &#125;&#125;.*:ALL <span class="attribute">append_privs</span>=<span class="literal">yes</span> <span class="attribute">password</span>=foo</span><br><span class="line">  with_nested:</span><br><span class="line">    - [ <span class="string">&#x27;alice&#x27;</span>, <span class="string">&#x27;bob&#x27;</span> ]</span><br><span class="line">    - [ <span class="string">&#x27;clientdb&#x27;</span>, <span class="string">&#x27;employeedb&#x27;</span>, <span class="string">&#x27;providerdb&#x27;</span> ]</span><br></pre></td></tr></table></figure><p>和以上介绍的’with_items’一样,你也可以使用预定义变量.:</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">- name: here, &#x27;users&#x27; contains the above list of employees</span></span><br><span class="line"><span class="language-xml">  mysql_user: name=</span><span class="template-variable">&#123;&#123; <span class="name">item</span>[0] &#125;&#125;</span><span class="language-xml"> priv=</span><span class="template-variable">&#123;&#123; <span class="name">item</span>[1] &#125;&#125;</span><span class="language-xml">.*:ALL append_privs=yes password=foo</span></span><br><span class="line"><span class="language-xml">  with_nested:</span></span><br><span class="line"><span class="language-xml">    - &quot;</span><span class="template-variable">&#123;&#123;<span class="name">users</span>&#125;&#125;</span><span class="language-xml">&quot;</span></span><br><span class="line"><span class="language-xml">    - [ &#x27;clientdb&#x27;, &#x27;employeedb&#x27;, &#x27;providerdb&#x27; ]</span></span><br></pre></td></tr></table></figure><h2 id="Playbook中template-for-if"><a href="#Playbook中template-for-if" class="headerlink" title="Playbook中template for if"></a>Playbook中template for if</h2><blockquote><p>for循环和if条件判断的语法格式</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for x in list %&#125;</span><br><span class="line">expression</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if bool %&#125;</span><br><span class="line">expression</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>案例</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">centos</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">81</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">82</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">conf</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=for1.conf.j2</span> <span class="string">dest=/data/for1.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for port in ports %&#125;</span><br><span class="line">server&#123;</span><br><span class="line">  listen &#123;&#123; port &#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>补充：yaml中vars变量还可以采用列表嵌套字典的方式，定义更多的键值对。</p></blockquote><h1 id="role"><a href="#role" class="headerlink" title="role"></a><a href="http://ansible.com.cn/docs/playbooks_roles.html?highlight=role">role</a></h1><blockquote><p><strong>Role</strong>s 的概念来自于这样的想法：通过 include 包含文件并将它们组合在一起，组织成一个简洁、可重用的抽象对象。这种方式可使你将注意力更多地放在大局上，只有在需要时才去深入了解细节。</p></blockquote><ul><li>role提高了playbook的复用率</li></ul><blockquote><p>role的推荐目录为<code>/etc/ansible/roles</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">roles/</span><br><span class="line">├── httpd</span><br><span class="line">├── memcache</span><br><span class="line">└── mysql</span><br></pre></td></tr></table></figure><p><img src="/"></p><h2 id="场景模拟"><a href="#场景模拟" class="headerlink" title="场景模拟"></a>场景模拟</h2><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\ansible-role-tree.png" alt="ansible-role-tree"></p><p><a href="https://aluopy.cn/ansible/dir-arrange/">目录编排</a></p><p>每个角色，以特定的层级目录结构进行组织。</p><p><strong>roles 目录结构：</strong> playbook.yml roles&#x2F; project&#x2F; tasks&#x2F; files&#x2F; vars&#x2F; templates&#x2F; handlers&#x2F; default&#x2F; meta&#x2F;</p><p><strong>Roles 各目录作用：</strong> <code>roles/project/ </code>：项目名称，有以下子目录</p><ul><li><code>files/</code> ：存放由 copy 或 script 模块等调用的文件</li><li><code>templates/</code>：template 模块查找所需要模板文件的目录</li><li><code>tasks/</code>：定义 task，role 的基本元素，至少应该包含一个名为 main.yml 的文件；其它的文件需要在此文件中通过 include 进行包含</li><li><code>handlers/</code>：至少应该包含一个名为 main.yml 的文件；其它的文件需要在此文件中通过 include 进行包含</li><li><code>vars/</code>：定义变量，至少应该包含一个名为 main.yml 的文件；其它的文件需要在此文件中通过 include 进行包含</li><li><code>meta/</code>：定义当前角色的特殊设定及其依赖关系，至少应该包含一个名为 main.yml 的文件，其它文件需在此文件中通过 include 进行包含</li><li><code>default/</code>：设定默认变量时使用此目录中的 main.yml 文件，比 vars 的优先级低</li></ul><div class="admonition note"><p class="admonition-title">注意</p><p>未来使用playbook调用role时，要将playbook文件放在role平级目录下</p></div><blockquote><p>需要实现一个nginx的role</p></blockquote><p>思路</p><ol><li>创建组nginx</li><li>创建用户nginx</li><li>安装nginx</li><li>使用模板文件，修改配置</li><li>启动service</li></ol><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ansible学习笔记</summary>
    
    
    
    <category term="Linux" scheme="http://asucanyh-cn.github.io/categories/Linux/"/>
    
    
    <category term="ansible" scheme="http://asucanyh-cn.github.io/tags/ansible/"/>
    
    <category term="linux" scheme="http://asucanyh-cn.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos网络问题解决方案</title>
    <link href="http://asucanyh-cn.github.io/posts/3307706676/"/>
    <id>http://asucanyh-cn.github.io/posts/3307706676/</id>
    <published>2023-01-29T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="eth1无ip4地址"><a href="#eth1无ip4地址" class="headerlink" title="eth1无ip4地址"></a>eth1无ip4地址</h1><h2 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h2><ul><li>桥接模式</li></ul><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>手动创建<code>ifcfg-eth1</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ifcfg-eth1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只需要两项就可以解决</span></span><br><span class="line">DEVICE=eth1</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">完整网卡文件内容</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=aa6a1ea8-c991-48aa-9b11-ce366363f592</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.41.89</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.41.2</span><br><span class="line">DNS1=114.114.114.114</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启网络服务</span></span><br><span class="line">systemctl restart NetworkManager</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ansible学习笔记</summary>
    
    
    
    <category term="Linux" scheme="http://asucanyh-cn.github.io/categories/Linux/"/>
    
    
    <category term="Centos" scheme="http://asucanyh-cn.github.io/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>ansible学习笔记Part4</title>
    <link href="http://asucanyh-cn.github.io/posts/1387649279/"/>
    <id>http://asucanyh-cn.github.io/posts/1387649279/</id>
    <published>2023-01-29T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Playbook中变量的使用"><a href="#Playbook中变量的使用" class="headerlink" title="Playbook中变量的使用"></a><a href="https://www.cnblogs.com/f-ck-need-u/p/7571974.html#1-1-ansible-facts">Playbook中变量的使用</a></h1><h2 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h2><div class="admonition info"><p class="admonition-title">变量名</p><p>仅字母、数字和下划线组成，且只能以字母开头</p></div><div class="admonition note"><p class="admonition-title">playbook中变量的表示以及赋值</p><p>使用<code>&#123;&#123;&#125;&#125;</code> mustache语法，运行playbook时添加<code>-e 参数</code>为变量赋值。</p></div><ol><li>setup模块</li></ol><blockquote><p>内置的setup模块，用于查询内置变量。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- name: Gathers facts about remote hosts</span><br><span class="line">  setup:</span><br><span class="line">      fact_path:             # Path used for local ansible facts (`*.fact&#x27;) - files in this dir will be run (if executable) and their results be added to  `ansible_local&#x27; facts if a file is not executable it is read. Check notes for Windows options. (from 2.1 on) File/results format can be JSON or INI-format. The default `fact_path&#x27; can be  specified in `ansible.cfg&#x27; for when setup is automatically called as part of `gather_facts&#x27;.</span><br><span class="line">      filter:               # 过滤内容，支持通配符  # If supplied, only return facts that match this shell-style (fnmatch) wildcard.</span><br><span class="line">      gather_subset:         # If supplied, restrict the additional facts collected to the given subset. Possible values: `all&#x27;, `min&#x27;, `hardware&#x27;,  `network&#x27;, `virtual&#x27;, `ohai&#x27;, and `facter&#x27;. Can specify a list of values to specify a larger subset. Values can also be used with an initial `!&#x27; to specify that that specific subset should not be collected.  For instance: `!hardware,!network,!virtual,!ohai,!facter&#x27;. If `!all&#x27; is specified then only the min subset is collected. To avoid collecting even the min subset,  specify `!all,!min&#x27;. To collect only specific facts, use `!all,!min&#x27;, and specify the particular fact subsets. Use the filter parameter if you do not want to display some collected  facts.</span><br><span class="line">     gather_timeout:        # Set the default timeout in seconds for individual fact gathering.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">cmdline</span></span><br><span class="line">ansible host -m setup -a &#x27;filter=&lt;..&gt;&#x27;</span><br></pre></td></tr></table></figure><ol start="2"><li>在playbook中定义变量</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- hosts:</span><br><span class="line">  remote_user:</span><br><span class="line">  vars:</span><br><span class="line">    - var1: #变量值1</span><br><span class="line">    - var2: #变量值2</span><br></pre></td></tr></table></figure><ol start="3"><li>利用命令行指定变量</li></ol><div class="admonition note"><p class="admonition-title">优先级</p><p>命令行的优先级要高于配置文件。</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -e &#x27;var1=value1 var2=value2&#x27; file.yaml</span><br></pre></td></tr></table></figure><ol start="4"><li>在<code>/etc/ansible/hosts</code>中定义</li></ol><div class="admonition note"><p class="admonition-title">主机清单中定义变量</p><p>分为<code>普通变量</code>和<code>公共（组）变量</code>，普通变量优先级<code>高于</code>公共（组）变量。</p></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">websrvs</span>]</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.10</span> <span class="string">var1=value1</span> <span class="string">var2=value2</span>  <span class="comment">#普通变量</span></span><br><span class="line">[<span class="string">websrvs:vars</span>] <span class="comment">#公共（组）变量</span></span><br><span class="line"><span class="string">var3=value3</span></span><br><span class="line"><span class="string">var1=value0</span> <span class="comment">#由于普通变量优先于公共（组）变量，所以此处不会应用于192.168.1.10主机</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_41056224/article/details/105455329">为了避免混乱，还可以采用文件的形式来定义。</a></p><ol start="5"><li>在外部yaml文件定义变量并在playbook中引用</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;var1:value1\nvar2:value2&quot; &gt;&gt; /etc/ansible/vars.yaml</span><br></pre></td></tr></table></figure><blockquote><p>在playbook文件中，使用<code>vars_files</code>引用外部文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: </span><br><span class="line">  remote_user:</span><br><span class="line">  vars_files:</span><br><span class="line">    - /path/to/vars.yaml</span><br><span class="line">    </span><br><span class="line">   tasks:</span><br><span class="line">     - name:</span><br><span class="line">        &lt;moduel&gt;:</span><br></pre></td></tr></table></figure><ol start="6"><li>在role文件中定义变量</li></ol><h1 id="模板templates"><a href="#模板templates" class="headerlink" title="模板templates"></a>模板templates</h1><blockquote><p>使用<a href="http://docs.jinkan.org/docs/jinja2/"><code>Jinja2</code>语法</a></p></blockquote><div class="admonition note"><p class="admonition-title">注意</p><p>template模块只能在playbook文件中使用。</p></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">ubuntu</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">       <span class="attr">apt:</span> <span class="string">name=nginx</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">template</span></span><br><span class="line">       <span class="attr">template:</span> <span class="string">src=nginx.conf.j2</span> <span class="string">dest=/etc/nginx/nginx.conf</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">       <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br></pre></td></tr></table></figure><h2 id="在playbook文件使用条件判断"><a href="#在playbook文件使用条件判断" class="headerlink" title="在playbook文件使用条件判断"></a>在playbook文件使用条件判断</h2><blockquote><p>when语句</p><p>在task后添加when子句可用于条件测试</p></blockquote><div class="admonition info"><p class="admonition-title">补充</p><p>when语句还支持Jinja2表达式语法。如：<code>when: var==&quot;value&quot;</code></p></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">ubuntu</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">       <span class="attr">apt:</span> <span class="string">name=nginx</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">template</span></span><br><span class="line">       <span class="attr">template:</span> <span class="string">src=nginx.conf.j2</span> <span class="string">dest=/etc/nginx/nginx.conf</span></span><br><span class="line">       <span class="attr">when:</span> <span class="string">var==&quot;value“</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">       <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ansible学习笔记</summary>
    
    
    
    <category term="Linux" scheme="http://asucanyh-cn.github.io/categories/Linux/"/>
    
    
    <category term="ansible" scheme="http://asucanyh-cn.github.io/tags/ansible/"/>
    
    <category term="linux" scheme="http://asucanyh-cn.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Termux安装Ubuntu等操作系统的过程记录</title>
    <link href="http://asucanyh-cn.github.io/posts/1970583601/"/>
    <id>http://asucanyh-cn.github.io/posts/1970583601/</id>
    <published>2023-01-27T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="admonition info"><p class="admonition-title">参阅</p></div><p>​    <a href="https://gitee.com/KudouShinnyan">工藤新喵</a>.<a href="https://gitee.com/KudouShinnyan/ubuntu-in-termux">ubuntu-in-termux</a>.Gitee.[1]<br>​    <a href="https://github.com/xiliuya">xiliuya</a>.<a href="https://github.com/xiliuya/termux-linux/">termux-linux</a>.Github.[2]</p><h1 id="centos安装"><a href="#centos安装" class="headerlink" title="centos安装"></a>centos安装</h1><blockquote><p><a href="https://github.com/xiliuya/termux-linux/releases/download/untagged-d42e22a770f3c95aac45/install_linux.sh">脚本</a>——这个脚本还可以安装很多其它的操作系统，而且下载速度还不赖</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行脚本，根据提示输入对应的系统</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建议装8-stream，目前9还有一些东西不支持</span></span><br><span class="line">bash install_linux.sh</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">centos</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">9</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/qq_22938603/article/details/128109424">换源（9-stream）</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清华源</span></span><br><span class="line">mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.bk</span><br><span class="line">touch /etc/yum.repos.d/centos.repo</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">手动复制一下</span></span><br><span class="line">[baseos]</span><br><span class="line">name=CentOS Stream $releasever - BaseOS</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mirrorlist=http://mirrorlist.centos.org/?release=<span class="variable">$stream</span>&amp;<span class="built_in">arch</span>=<span class="variable">$basearch</span>&amp;repo=BaseOS&amp;infra=<span class="variable">$infra</span></span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-stream/9-stream/BaseOS/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br><span class="line">[appstream]</span><br><span class="line">name=CentOS Stream $releasever - AppStream</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mirrorlist=http://mirrorlist.centos.org/?release=<span class="variable">$stream</span>&amp;<span class="built_in">arch</span>=<span class="variable">$basearch</span>&amp;repo=AppStream&amp;infra=<span class="variable">$infra</span></span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-stream/9-stream/AppStream/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/wswind/p/11751829.html">换源（8-stream）</a></p></blockquote><blockquote><p>更新</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache &amp;&amp; yum update -y</span><br></pre></td></tr></table></figure><h1 id="ubuntu安装"><a href="#ubuntu安装" class="headerlink" title="ubuntu安装"></a>ubuntu安装</h1><blockquote><p><a href="https://gitee.com/KudouShinnyan/ubuntu-in-termux">脚本</a></p></blockquote><blockquote><p>换源</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">souces.list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">See http://help.ubuntu.com/community/UpgradeNotes <span class="keyword">for</span> how to upgrade to</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">newer versions of the distribution.</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Major bug fix updates produced after the final release of the</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># distribution.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># team. Also, please note that software in universe WILL NOT receive any</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># review or updates from the Ubuntu security team.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy universe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy universe</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-updates universe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-updates universe</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># team, and may not be under a free licence. Please satisfy yourself as to</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># your rights to use the software. Also, please note that software in</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># multiverse WILL NOT receive any review or updates from the Ubuntu</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># security team.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy multiverse</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-updates multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-updates multiverse</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># N.B. software from this repository may not have been tested as</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># extensively as that contained in the main release, although it includes</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># newer versions of some applications which may provide useful features.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Also, please note that software in backports WILL NOT receive any review</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># or updates from the Ubuntu security team.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-security main restricted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-security main restricted</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-security universe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-security universe</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-security multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-security multiverse</span></span><br><span class="line">deb https://download.webmin.com/download/repository sarge contrib</span><br></pre></td></tr></table></figure><h1 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install vim</span><br><span class="line">apt install ssh</span><br></pre></td></tr></table></figure><h1 id="mysql数据库"><a href="#mysql数据库" class="headerlink" title="mysql数据库"></a><a href="https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/">mysql数据库</a></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;var&#x2F;log&#x2F;mysql&#x2F;error.log</p><p>Plugin mysqlx reported: ‘Setup of bind-address: ‘127.0.0.1’ port: 33060 failed, <code>socket()</code> failed with error: Permission denied(13)’</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">尝试使用user=root启动</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">直接使用mysqld启动</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">usermod -a -G aid_inet,aid_net_raw mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">usermod -a -G aid_inet,aid_net_raw root</span></span><br></pre></td></tr></table></figure><h2 id="vnc服务器"><a href="#vnc服务器" class="headerlink" title="vnc服务器"></a><a href="https://www.cnblogs.com/liyuanhong/articles/15487147.html">vnc服务器</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">待续</span></span><br></pre></td></tr></table></figure><h1 id="声卡驱动"><a href="#声卡驱动" class="headerlink" title="声卡驱动"></a>声卡驱动</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install pulseaudio</span><br><span class="line">sudo apt install pavucontrol</span><br><span class="line">pactl list sources short</span><br><span class="line">echo  &#x27;load-module module-simple-protocol-tcp rate=44100 format=s16le channels=2 source=0 record=true port=23217&#x27;&gt;&gt; /etc/pulse/default.pa</span><br><span class="line">pulseaudio --start</span><br></pre></td></tr></table></figure><h1 id="宝塔面板"><a href="#宝塔面板" class="headerlink" title="宝塔面板"></a>宝塔面板</h1><blockquote><p>Ubuntu</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec</span><br></pre></td></tr></table></figure><h1 id="问题方案"><a href="#问题方案" class="headerlink" title="问题方案"></a>问题方案</h1><blockquote><p><a href="https://blog.csdn.net/zong596568821xp/article/details/90747263">dpkg: error processing package mariadb-common (–configure):<br> installed mariadb-common package post-installation script subprocess returned error exit status 2<br>Errors were encountered while processing:<br> mariadb-common<br>E: Sub-process &#x2F;usr&#x2F;bin&#x2F;dpkg returned an error code (1)</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/lib/dpkg</span><br><span class="line">sudo mv info info.bak</span><br><span class="line">sudo mkdir info</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://399s.com/3089.html">debconf: unable to initialize frontend: Dialog<br>debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;Debconf&#x2F;FrontEnd&#x2F;Dialog.pm line 78.)</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install dialog</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/wtlll/article/details/119059267">sudo: &#x2F;etc&#x2F;sudo.conf is owned by uid 10187, should be 0<br>sudo: &#x2F;etc&#x2F;sudo.conf is owned by uid 10187, should be 0<br>sudo: error in &#x2F;etc&#x2F;sudo.conf, line 0 while loading plugin “sudoers_policy”<br>sudo: &#x2F;usr&#x2F;libexec&#x2F;sudo&#x2F;sudoers.so must be owned by uid 0<br>sudo: fatal error, unable to load plugins</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chown root:root /etc/sudo.conf;</span><br><span class="line">chown root:root  /usr/libexec/sudo/sudoers.so;</span><br><span class="line">chown root:root /etc/sudoers;</span><br><span class="line">chown root:root /etc/sudoers.d -R</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> root:root /etc/sudoers.d/README</span>               </span><br><span class="line">chown root:root /etc/sudo -R</span><br></pre></td></tr></table></figure><blockquote><p>[&#x2F;usr&#x2F;sbin&#x2F;service: line 3: &#x2F;etc&#x2F;init.d&#x2F;functions: No such file or directory](&#x2F;usr&#x2F;sbin&#x2F;service: line 3: &#x2F;etc&#x2F;init.d&#x2F;functions: No such file or directory)</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y initscripts</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://zhuanlan.zhihu.com/p/386480011">W: GPG error: https://download.webmin.com/download/repository sarge Release: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY D97A3AE911F63C51<br>E: The repository ‘https://download.webmin.com/download/repository sarge Release' is not signed.<br>N: Updating from such a repository can’t be done securely, and is therefore disabled by default.<br>N: See apt-secure(8) manpage for repository creation and user configuration details.</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D97A3AE911F63C51</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/sw-code/p/14998645.html">Running in chroot, ignoring command ‘start’</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/smaknsk/servicectl/archive/1.0.tar.gz</span><br><span class="line">tar -xf 1.0.tar.gz -C /usr/local/lib/</span><br><span class="line">ln -s /usr/local/lib/servicectl-1.0/servicectl /usr/bin/servicectl</span><br><span class="line">ln -s /usr/local/lib/servicectl-1.0/serviced /usr/bin/serviced</span><br><span class="line">mv /usr/bin/systemctl /usr/bin/systemctl.bak</span><br><span class="line">mv /usr/bin/servicectl /usr/bin/systemctl</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;usr&#x2F;bin&#x2F;systemctl: 16: [: -ne: unexpected operator<br>&#x2F;usr&#x2F;bin&#x2F;systemctl: 23: Syntax error: “(“ unexpected</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解释器错误</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改首行 shebang</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh -&gt;<span class="comment">#!/bin/bash</span></span></span><br></pre></td></tr></table></figure><blockquote><p>子进程 已安装 post-installation 脚本 返回了错误号 1</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old </span><br><span class="line">sudo mkdir /var/lib/dpkg/info</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -f install </span><br><span class="line">sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old </span><br><span class="line">sudo rm -rf /var/lib/dpkg/info</span><br><span class="line">sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info </span><br></pre></td></tr></table></figure><blockquote><p>hostname: Name or service not known<br>make-ssl-cert: Could not get FQDN, using ‘localhost’.<br>make-ssl-cert: You may want to fix your &#x2F;etc&#x2F;hosts and&#x2F;or DNS setup and run<br>make-ssl-cert: ‘make-ssl-cert generate-default-snakeoil –force-overwrite’<br>make-ssl-cert: again.</p></blockquote><blockquote><p>&#x2F;usr&#x2F;bin&#x2F;deb-systemd-helper: error: systemctl preset failed on ubuntu-advantage.service: No such file or directory</p></blockquote><blockquote><p>invoke-rc.d: could not determine current runlevel<br>Scheduling reload of GNOME Display Manager configuration gdm3                                 setpriv: setresgid failed: Operation not permitted<br>invoke-rc.d: initscript gdm3, action “reload” failed.</p></blockquote><blockquote><p>setpriv: setresgid failed: Operation not permitted</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+s /bin/su</span><br><span class="line">chmod a+s /bin/sudo</span><br></pre></td></tr></table></figure><blockquote><p>Failed to execute child process “dbus-launch“</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install dbus-x11</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://askubuntu.com/questions/338382/pulseaudio-not-working-home-directory-not-accessible-permission-denied">W: [pulseaudio] main.c: 不应以 root 身份运行本程序(除非指定 –system 参数)。<br>E: [autospawn] core-util.c: Home directory not accessible: 权限不够<br>W: [autospawn] lock-autospawn.c: 不能访问自动执行锁。<br>E: [pulseaudio] main.c: Failed to acquire autospawn lock</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown root:root $HOME/</span><br><span class="line">sudo chown -R $USER:$USER $HOME/</span><br></pre></td></tr></table></figure><blockquote><p>The connection was refused by the computer</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.vnc/config</span></span><br><span class="line">echo localhost=no &gt;&gt; .vnc/config</span><br></pre></td></tr></table></figure><blockquote><p>新用户tab无法补全</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改解释器为SHELL=/bin/bash</span></span><br><span class="line">vim /etc/default/useradd</span><br></pre></td></tr></table></figure><blockquote><p>N: [pulseaudio] main.c: User-configured server at 127.0.0.1:23217, refusing to start&#x2F;autospawn.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到问题所在了</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是 linux deploy在/etc/profile.d/下的pulse.sh脚本的问题</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解决方案是移出脚本或注释所以内容</span></span><br></pre></td></tr></table></figure><blockquote><p>Connection failure: Connection refused<br>pa_context_connect() failed: Connection refused</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>赋予root网络相关权限，解决apt update的连接错误提示（应该是用这个解决的，也可能是通过修改linuxdeploy的dns配置为自动）</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -a -G aid_inet,aid_net_raw root</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Termux安装ubuntu等操作系统集合，安装过程笔记。</summary>
    
    
    
    <category term="Linux" scheme="http://asucanyh-cn.github.io/categories/Linux/"/>
    
    
    <category term="Termux" scheme="http://asucanyh-cn.github.io/tags/Termux/"/>
    
  </entry>
  
  <entry>
    <title>解决curl命令报错</title>
    <link href="http://asucanyh-cn.github.io/posts/880228874/"/>
    <id>http://asucanyh-cn.github.io/posts/880228874/</id>
    <published>2023-01-26T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="admonition info"><p class="admonition-title">curl: symbol lookup error: curl: undefined symbol: curl_easy_nextheader</p><p>Saeed.<a href="https://stackoverflow.com/questions/66017956/bash-usr-local-bin-curl-no-such-file-or-directory#comment116723638_66018012">stackoverflow.com</a>.[1]</p></div><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><blockquote><p><a href="https://blog.csdn.net/Cappuccino_jay/article/details/125219983">首先，卸载本机的curl，此处仅介绍编译安装如何卸载。</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在原来执行make的目录下，查找install_manifest.txt文件。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果已经删除了源码安装的文件，可用重新下载编译安装一遍再卸载。</span></span><br><span class="line">cat install_manifest.txt | sudo xargs rm</span><br></pre></td></tr></table></figure><blockquote><p>卸载libcurl4</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt remove libcurl4</span><br></pre></td></tr></table></figure><blockquote><p>重新安装curl</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install curl</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">整理了一些遇到的问题。</summary>
    
    
    
    <category term="Linux" scheme="http://asucanyh-cn.github.io/categories/Linux/"/>
    
    
    <category term="curl" scheme="http://asucanyh-cn.github.io/tags/curl/"/>
    
    <category term="Ubuntu" scheme="http://asucanyh-cn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ansible学习笔记Part3</title>
    <link href="http://asucanyh-cn.github.io/posts/3436268892/"/>
    <id>http://asucanyh-cn.github.io/posts/3436268892/</id>
    <published>2023-01-23T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://lptexas.top/posts/3151396298/">接上一节</a></p></blockquote><h1 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h1><h2 id="hostname主机名"><a href="#hostname主机名" class="headerlink" title="hostname主机名"></a>hostname主机名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">只有一个参数name，用于指定主机名</span></span><br></pre></td></tr></table></figure><h2 id="cron定时任务"><a href="#cron定时任务" class="headerlink" title="cron定时任务"></a>cron定时任务</h2><blockquote><p>支持：分时日月周（minute,hour,day,month,weekday）</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS (= is mandatory):</span><br><span class="line"></span><br><span class="line">- backup</span><br><span class="line">        If set, create a backup of the crontab before it is modified. The location of the backup is returned in the</span><br><span class="line">        `backup_file&#x27; variable by this module.</span><br><span class="line">        [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line"></span><br><span class="line">- cron_file</span><br><span class="line">        If specified, uses this file instead of an individual user&#x27;s crontab.</span><br><span class="line">        If this is a relative path, it is interpreted with respect to `/etc/cron.d&#x27;.</span><br><span class="line">        If it is absolute, it will typically be `/etc/crontab&#x27;.</span><br><span class="line">        Many linux distros expect (and some require) the filename portion to consist solely of upper- and lower-case letters,</span><br><span class="line">        digits, underscores, and hyphens.</span><br><span class="line">        To use the `cron_file&#x27; parameter you must specify the `user&#x27; as well.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- day</span><br><span class="line">        Day of the month the job should run ( 1-31, *, */2, etc )</span><br><span class="line">        (Aliases: dom)[Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- disabled</span><br><span class="line">        If the job should be disabled (commented out) in the crontab.</span><br><span class="line">        Only has effect if `state=present&#x27;.</span><br><span class="line">        [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.0</span><br><span class="line"></span><br><span class="line">- env</span><br><span class="line">        If set, manages a crontab&#x27;s environment variable.</span><br><span class="line">        New variables are added on top of crontab.</span><br><span class="line">        `name&#x27; and `value&#x27; parameters are the name and the value of environment variable.</span><br><span class="line">       [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.1</span><br><span class="line"></span><br><span class="line">- hour</span><br><span class="line">        Hour when the job should run ( 0-23, *, */2, etc )</span><br><span class="line">        [Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- insertafter</span><br><span class="line">        Used with `state=present&#x27; and `env&#x27;.</span><br><span class="line">        If specified, the environment variable will be inserted after the declaration of specified environment variable.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 2.1</span><br><span class="line"></span><br><span class="line">- insertbefore</span><br><span class="line">        Used with `state=present&#x27; and `env&#x27;.</span><br><span class="line">        If specified, the environment variable will be inserted before the declaration of specified environment variable.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 2.1</span><br><span class="line"></span><br><span class="line">- job</span><br><span class="line">        The command to execute or, if env is set, the value of environment variable.</span><br><span class="line">        The command should not contain line breaks.</span><br><span class="line">        Required if `state=present&#x27;.</span><br><span class="line">        (Aliases: value)[Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- minute</span><br><span class="line">        Minute when the job should run ( 0-59, *, */2, etc )</span><br><span class="line">        [Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- month</span><br><span class="line">        Month of the year the job should run ( 1-12, *, */2, etc )</span><br><span class="line">        [Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- name</span><br><span class="line">        Description of a crontab entry or, if env is set, the name of environment variable.</span><br><span class="line">        Required if `state=absent&#x27;.</span><br><span class="line">        Note that if name is not set and `state=present&#x27;, then a new crontab entry will always be created, regardless of</span><br><span class="line">        existing ones.</span><br><span class="line">        This parameter will always be required in future releases.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- reboot</span><br><span class="line">        If the job should be run at reboot. This option is deprecated. Users should use special_time.</span><br><span class="line">        [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 1.0</span><br><span class="line"></span><br><span class="line">- special_time</span><br><span class="line">        Special time specification nickname.</span><br><span class="line">        (Choices: annually, daily, hourly, monthly, reboot, weekly, yearly)[Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 1.3</span><br><span class="line"></span><br><span class="line">- state</span><br><span class="line">        Whether to ensure the job or environment variable is present or absent.</span><br><span class="line">        (Choices: absent, present)[Default: present]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- user</span><br><span class="line">        The specific user whose crontab should be modified.</span><br><span class="line">        When unset, this parameter defaults to using `root&#x27;.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- weekday</span><br><span class="line">        Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )</span><br><span class="line">        (Aliases: dow)[Default: *]</span><br><span class="line">        type: str</span><br></pre></td></tr></table></figure><blockquote><p>创建一个定时任务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible host -m cron -a &#x27;&#x27;minute=*/5 job=/path/to/job/&#x27;</span><br></pre></td></tr></table></figure><h2 id="yum包管理"><a href="#yum包管理" class="headerlink" title="yum包管理"></a>yum包管理</h2><blockquote><p>需要机器支持yum包管理器</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">常用参数</span></span><br><span class="line">- name </span><br><span class="line">- state</span><br><span class="line">        Whether to install (`present&#x27; or `installed&#x27;, `latest&#x27;), or remove (`absent&#x27; or `removed&#x27;) a package.</span><br><span class="line">        `present&#x27; and `installed&#x27; will simply ensure that a desired package is installed.</span><br><span class="line">        `latest&#x27; will update the specified package if it&#x27;s not of the latest available version.</span><br><span class="line">        `absent&#x27; and `removed&#x27; will remove the specified package.</span><br><span class="line">        Default is `None&#x27;, however in effect the default action is `present&#x27; unless the `autoremove&#x27; option is enabled for</span><br><span class="line">        this module, then `absent&#x27; is inferred.</span><br><span class="line">        (Choices: absent, installed, latest, present, removed)[Default: (null)]</span><br><span class="line">- list</span><br><span class="line">        Package name to run the equivalent of yum list --show-duplicates &lt;package&gt; against. In addition to listing packages,</span><br><span class="line">        use can also list the following: `installed&#x27;, `updates&#x27;, `available&#x27; and `repos&#x27;.</span><br><span class="line">        This parameter is mutually exclusive with `name&#x27;.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">-...</span><br></pre></td></tr></table></figure><h2 id="service服务管理"><a href="#service服务管理" class="headerlink" title="service服务管理"></a>service服务管理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">常用参数</span></span><br><span class="line">- name: # 介绍功能</span><br><span class="line">  service:</span><br><span class="line">    name: # 服务名</span><br><span class="line">    state: # 状态，可选参数started、restarted、reloaded、stopped</span><br><span class="line">    enable: # bool型，是否开启开机自启</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># commandline</span></span></span><br><span class="line">ansible host -m service -a &#x27;name=&lt;...&gt; state=&lt;...&gt; enable=&lt;true|false&gt;&#x27;</span><br></pre></td></tr></table></figure><h2 id="user管理用户"><a href="#user管理用户" class="headerlink" title="user管理用户"></a>user管理用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">- name: Manage user accounts</span><br><span class="line">  user:</span><br><span class="line">      append:                # If `yes&#x27;, add the user to the groups specified in `groups&#x27;. If `no&#x27;, user will only be added to the groups specified in `groups&#x27;, removing them from all other groups. Mutually exclusive with `local&#x27;</span><br><span class="line">      authorization:         # Sets the authorization of the user. Does nothing when used with other platforms. Can set multiple authorizations using comma separation. To delete all authorizations, use `authorization=&#x27;&#x27;&#x27;. Currently supported on Illumos/Solaris.</span><br><span class="line">      comment:               # 描述信息# Optionally sets the description (aka `GECOS&#x27;) of user account.</span><br><span class="line">      create_home:           # Unless set to `no&#x27;, a home directory will be made for the user when the account is created or if the home directory does not</span><br><span class="line">                               exist. Changed from `createhome&#x27; to `create_home&#x27; in Ansible 2.5.</span><br><span class="line">      expires:              # 设置账号有效期 # An expiry time for the user in epoch, it will be ignored on platforms that do not support this. Currently supported on GNU/Linux, FreeBSD, and DragonFlyBSD. Since Ansible 2.6 you can remove the expiry time specify a negative value. Currently supported on GNU/Linux and FreeBSD.</span><br><span class="line">      force:                 # This only affects `state=absent&#x27;, it forces removal of the user and associated directories on supported platforms. The behavior is the same as `userdel --force&#x27;, check the man page for `userdel&#x27; on your system for details and support. When used with `generate_ssh_key=yes&#x27; this forces an existing key to be overwritten.</span><br><span class="line">      generate_ssh_key:      # Whether to generate a SSH key for the user in question. This will *not* overwrite an existing SSH key unless used with  `force=yes&#x27;.</span><br><span class="line">      group:                 # 设置主组 # Optionally sets the user&#x27;s primary group (takes a group name).</span><br><span class="line">      groups:                # 设置附加组 # List of groups user will be added to. When set to an empty string `&#x27;&#x27;&#x27;, the user is removed from all groups except the primary group. Before Ansible 2.3, the only input format allowed was a comma separated string. Mutually exclusive with `local&#x27;</span><br><span class="line">      hidden:                # macOS only, optionally hide the user from the login window and system preferences. The default will be `yes&#x27; if the `system&#x27; option is used.</span><br><span class="line">      home:                # 指定用户家目录  # Optionally set the user&#x27;s home directory.</span><br><span class="line">      local:                 # Forces the use of &quot;local&quot; command alternatives on platforms that implement it. This is useful in environments that use centralized authentification when you want to manipulate the local users (i.e. it uses `luseradd&#x27; instead of `useradd&#x27;). This will check `/etc/passwd&#x27; for an existing account before invoking commands. If the local account database exists somewhere other than `/etc/passwd&#x27;, this setting will not work properly. This requires that the above commands as well as `/etc/passwd&#x27; must exist on the target host, otherwise it will be a fatal error. Mutually exclusive with `groups&#x27; and `append&#x27;</span><br><span class="line">      login_class:           # Optionally sets the user&#x27;s login class, a feature of most BSD OSs.</span><br><span class="line">      move_home:             # If set to `yes&#x27; when used with `home: &#x27;, attempt to move the user&#x27;s old home directory to the specified directory if it isn&#x27;t there already and the old home exists.</span><br><span class="line">      name:                 # 设置用户名 # (required) Name of the user to create, remove or modify.</span><br><span class="line">      non_unique:            # Optionally when used with the -u option, this option allows to change the user ID to a non-unique value.</span><br><span class="line">      password:              # 设置用户的密码 # Optionally set the user&#x27;s password to this crypted value. On macOS systems, this value has to be cleartext. Beware of security issues. To create a disabled account on Linux systems, set this to `&#x27;!&#x27;&#x27; or `&#x27;*&#x27;&#x27;. To create a disabled account on OpenBSD, set this to `&#x27;*************&#x27;&#x27;. See https://docs.ansible.com/ansible/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module for details on various ways to generate these password values. </span><br><span class="line">      password_lock:         # Lock the password (`usermod -L&#x27;, `usermod -U&#x27;, `pw lock&#x27;). Implementation differs by platform. This option does not always mean the user cannot login using other methods. This option does not disable the user, only lock the password. This must be set to `False&#x27; in order to unlock a currently locked password. The absence of this parameter will not unlock a password. Currently supported on Linux, FreeBSD, DragonFlyBSD, NetBSD, OpenBSD.</span><br><span class="line">      profile:               # Sets the profile of the user. Does nothing when used with other platforms. Can set multiple profiles using comma separation.  To delete all the profiles, use `profile=&#x27;&#x27;&#x27;. Currently supported on Illumos/Solaris.</span><br><span class="line">      remove:               #是否在删除用户的同时删除家目录 # This only affects `state=absent&#x27;, it attempts to remove directories associated with the user. The behavior is the same as   `userdel --remove&#x27;, check the man page for details and support.</span><br><span class="line">      role:                  # Sets the role of the user. Does nothing when used with other platforms. Can set multiple roles using comma separation. To delete all roles, use `role=&#x27;&#x27;&#x27;. Currently supported on Illumos/Solaris.</span><br><span class="line">      seuser:                # Optionally sets the seuser type (user_u) on selinux enabled systems.</span><br><span class="line">      shell:                 # Optionally set the user&#x27;s shell. On macOS, before Ansible 2.5, the default shell for non-system users was `/usr/bin/false&#x27;.  Since Ansible 2.5, the default shell for non-system users on macOS is `/bin/bash&#x27;. On other operating systems, the default shell is determined by the underlying tool being used. See Notes   for details.</span><br><span class="line">      skeleton:              # Optionally set a home skeleton directory. Requires `create_home&#x27; option!</span><br><span class="line">      ssh_key_bits:          # Optionally specify number of bits in SSH key to create.</span><br><span class="line">      ssh_key_comment:       # Optionally define the comment for the SSH key.</span><br><span class="line">      ssh_key_file:          # Optionally specify the SSH key filename. If this is a relative filename then it will be relative to the user&#x27;s home directory. This parameter defaults to `.ssh/id_rsa&#x27;.</span><br><span class="line">      ssh_key_passphrase:    # Set a passphrase for the SSH key. If no passphrase is provided, the SSH key will default to having no passphrase.</span><br><span class="line">      ssh_key_type:          # Optionally specify the type of SSH key to generate. Available SSH key types will depend on implementation present on target   host.</span><br><span class="line">      state:               # 对用户进行的操作（删除absent，默认present创建） # Whether the account should exist or not, taking action if the state is different from what is stated.</span><br><span class="line">      system:               # 是否设置用户为系统用户 # When creating an account `state=present&#x27;, setting this to `yes&#x27; makes the user a system account. This setting cannot be</span><br><span class="line">                               changed on existing users.</span><br><span class="line">      uid:                   # 手动设置用户的uid # Optionally sets the `UID&#x27; of the user.</span><br><span class="line">      update_password:      # 更行用户密码 # `always&#x27; will update passwords if they differ. `on_create&#x27; will only set the password for newly created users.</span><br></pre></td></tr></table></figure><h2 id="group管理组"><a href="#group管理组" class="headerlink" title="group管理组"></a>group管理组</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- name: Add or remove groups</span><br><span class="line">  group:</span><br><span class="line">      gid:                   # Optional `GID&#x27; to set for the group.</span><br><span class="line">      local:                 # Forces the use of &quot;local&quot; command alternatives on platforms that implement it. This is useful in environments that use centralized authentication when you want to manipulate the local groups. (e.g. it uses `lgroupadd&#x27; instead of `groupadd&#x27;). This requires that these commands exist on the targeted host, otherwise it will be a fatal error.</span><br><span class="line">      name:                  # (required) Name of the group to manage.</span><br><span class="line">      non_unique:            # This option allows to change the group ID to a non-unique value. Requires `gid&#x27;. Not supported on macOS or BusyBox distributions.</span><br><span class="line">      state:                 # Whether the group should be present or not on the remote host.</span><br><span class="line">      system:                # If `yes&#x27;, indicates that the group created is a system group.</span><br></pre></td></tr></table></figure><h1 id="ansible-galaxy命令"><a href="#ansible-galaxy命令" class="headerlink" title="ansible-galaxy命令"></a>ansible-galaxy命令</h1><blockquote><p>连接<a href="https://galaxy.ansible.com下载相应的roles./">https://galaxy.ansible.com下载相应的roles。</a></p></blockquote><h2 id="列出roles"><a href="#列出roles" class="headerlink" title="列出roles"></a>列出roles</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy list</span><br></pre></td></tr></table></figure><h2 id="下载roles"><a href="#下载roles" class="headerlink" title="下载roles"></a>下载roles</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy install &lt;&gt;</span><br></pre></td></tr></table></figure><h2 id="删除roles"><a href="#删除roles" class="headerlink" title="删除roles"></a>删除roles</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy remove &lt;&gt;</span><br></pre></td></tr></table></figure><h1 id="ansible-playbook命令"><a href="#ansible-playbook命令" class="headerlink" title="ansible-playbook命令"></a>ansible-playbook命令</h1><blockquote><p>剧本</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">optional arguments:</span><br><span class="line">  --ask-vault-pass      ask for vault password</span><br><span class="line">  --flush-cache         clear the fact cache for every host in inventory</span><br><span class="line">  --force-handlers      run handlers even if a task fails</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">列出主机</span></span><br><span class="line">  --list-hosts          outputs a list of matching hosts; does not execute</span><br><span class="line">                        anything else</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">列出所有标签</span></span><br><span class="line">  --list-tags           list all available tags</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">列出所有任务</span></span><br><span class="line">  --list-tasks          list all tasks that would be executed</span><br><span class="line">  --skip-tags SKIP_TAGS</span><br><span class="line">                        only run plays and tasks whose tags do not match these</span><br><span class="line">                        values</span><br><span class="line">  --start-at-task START_AT_TASK</span><br><span class="line">                        start the playbook at the task matching this name</span><br><span class="line">  --step                one-step-at-a-time: confirm each task before running</span><br><span class="line">  --syntax-check        perform a syntax check on the playbook, but do not</span><br><span class="line">                        execute it</span><br><span class="line">  --vault-id VAULT_IDS  the vault identity to use</span><br><span class="line">  --vault-password-file VAULT_PASSWORD_FILES</span><br><span class="line">                        vault password file</span><br><span class="line">  --version             show program&#x27;s version number, config file location,</span><br><span class="line">                        configured module search path, module location,</span><br><span class="line">                        executable location and exit</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">运行测试，并不会做修改</span></span><br><span class="line">  -C, --check           don&#x27;t make any changes; instead, try to predict some</span><br><span class="line">                        of the changes that may occur</span><br><span class="line">  -D, --diff            when changing (small) files and templates, show the</span><br><span class="line">                        differences in those files; works great with --check</span><br><span class="line">  -M MODULE_PATH, --module-path MODULE_PATH</span><br><span class="line">                        prepend colon-separated path(s) to module library (def</span><br><span class="line">                        ault=~/.ansible/plugins/modules:/usr/share/ansible/plu</span><br><span class="line">                        gins/modules)</span><br><span class="line">  -e EXTRA_VARS, --extra-vars EXTRA_VARS</span><br><span class="line">                        set additional variables as key=value or YAML/JSON, if</span><br><span class="line">                        filename prepend with @</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">修改并发数目，默认为5</span></span><br><span class="line">  -f FORKS, --forks FORKS</span><br><span class="line">                        specify number of parallel processes to use</span><br><span class="line">                        (default=5)</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -i INVENTORY, --inventory INVENTORY, --inventory-file INVENTORY</span><br><span class="line">                        specify inventory host path or comma separated host</span><br><span class="line">                        list. --inventory-file is deprecated</span><br><span class="line">  -l SUBSET, --limit SUBSET</span><br><span class="line">                        further limit selected hosts to an additional pattern</span><br><span class="line">  -t TAGS, --tags TAGS  only run plays and tasks tagged with these values</span><br><span class="line">  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable</span><br><span class="line">                        connection debugging)</span><br><span class="line">Privilege Escalation Options:</span><br><span class="line">  control how and which user you become as on target hosts</span><br><span class="line"></span><br><span class="line">  --become-method BECOME_METHOD</span><br><span class="line">                        privilege escalation method to use (default=sudo), use</span><br><span class="line">                        `ansible-doc -t become -l` to list valid choices.</span><br><span class="line">  --become-user BECOME_USER</span><br><span class="line">                        run operations as this user (default=root)</span><br><span class="line">  -K, --ask-become-pass</span><br><span class="line">                        ask for privilege escalation password</span><br><span class="line">  -b, --become          run operations with become (does not imply password</span><br><span class="line">                        prompting)</span><br></pre></td></tr></table></figure><h1 id="ansible-vault命令"><a href="#ansible-vault命令" class="headerlink" title="ansible-vault命令"></a>ansible-vault命令</h1><blockquote><p>对yml剧本文件进行加密解密</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">positional arguments:</span><br><span class="line">  &#123;create,decrypt,edit,view,encrypt,encrypt_string,rekey&#125;</span><br><span class="line">    create              Create new vault encrypted file</span><br><span class="line">    decrypt             Decrypt vault encrypted file</span><br><span class="line">    edit                Edit vault encrypted file</span><br><span class="line">    view                View vault encrypted file</span><br><span class="line">    encrypt             Encrypt YAML file</span><br><span class="line">    encrypt_string      Encrypt a string</span><br><span class="line">    rekey               Re-key a vault encrypted file</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  --version             show program&#x27;s version number, config file location,</span><br><span class="line">                        configured module search path, module location,</span><br><span class="line">                        executable location and exit</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable</span><br><span class="line">                        connection debugging)</span><br></pre></td></tr></table></figure><h2 id="加密-x2F-解密"><a href="#加密-x2F-解密" class="headerlink" title="加密&#x2F;解密"></a>加密&#x2F;解密</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault encrypt/decrypt &lt;&gt;</span><br></pre></td></tr></table></figure><h1 id="剧本yaml文件语法"><a href="#剧本yaml文件语法" class="headerlink" title="剧本yaml文件语法"></a>剧本yaml文件语法</h1><h2 id="结合ansible做简单介绍"><a href="#结合ansible做简单介绍" class="headerlink" title="结合ansible做简单介绍"></a>结合ansible做简单介绍</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">---</span> <span class="comment">#开头三个连接符表示档案的开始，可以不写，这只是一个习惯</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="comment">#指定主机，类似ansible后的第一个参数</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="comment">#指定登录的用户</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="comment">#任务模块，描述信息，一个name对应一个模块</span></span><br><span class="line">      <span class="string">&lt;module&gt;:</span> <span class="comment">#模块名和参数的键值对（这是最常用的形式）</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> </span><br><span class="line">      <span class="attr">action:</span> <span class="string">&lt;module&gt;</span> <span class="string">&lt;argues&gt;</span> <span class="comment">#这是第二种形式（不常用）</span></span><br><span class="line"><span class="string">...</span> <span class="comment">#表示结尾，可以不写</span></span><br></pre></td></tr></table></figure><h2 id="tasks-handlers和tags"><a href="#tasks-handlers和tags" class="headerlink" title="tasks,handlers和tags"></a>tasks,handlers和tags</h2><blockquote><p>tasks中的任务是依次执行的，当出现前一个任务修改了配置文件，后一个任务是启动服务的情况时，tasks无法让服务重启使新的配置生效。</p></blockquote><div class="admonition note"><p class="admonition-title">handlers</p><p>handlers触发器，可以用来解决上述问题。</p></div><h2 id="handlers"><a href="#handlers" class="headerlink" title="handlers"></a>handlers</h2><blockquote><p>与tasks平级，需要使用<code>notify</code>绑定事件</p></blockquote><p>以nginx服务为例</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">centos</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line"><span class="comment">#    - name: install nginx</span></span><br><span class="line"><span class="comment">#      yum: name=nginx</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=/etc/nginx/nginx.conf</span> <span class="string">dest=/etc/nginx/</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">restart</span> <span class="string">nginx</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">check</span> <span class="string">nginx</span> <span class="string">process</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">copy_config</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">nginx</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=restarted</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">check</span> <span class="string">nginx</span> <span class="string">process</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">killall</span> <span class="number">-0</span> <span class="string">nginx</span> <span class="string">&gt;</span> <span class="string">/tmp/nginx.log</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h2><blockquote><p>使用标签，可以用于特定执行某些动作。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ...</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=/etc/nginx/nginx.conf</span> <span class="string">dest=/etc/nginx/</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">restart</span> <span class="string">nginx</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">check</span> <span class="string">nginx</span> <span class="string">process</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">copy_config</span></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用-t参数可以指定标签</span></span><br><span class="line">ansible-playbook nginx.yml -t copy_config</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ansible学习笔记</summary>
    
    
    
    <category term="Linux" scheme="http://asucanyh-cn.github.io/categories/Linux/"/>
    
    
    <category term="ansible" scheme="http://asucanyh-cn.github.io/tags/ansible/"/>
    
    <category term="linux" scheme="http://asucanyh-cn.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ansible学习笔记Part2</title>
    <link href="http://asucanyh-cn.github.io/posts/3151396298/"/>
    <id>http://asucanyh-cn.github.io/posts/3151396298/</id>
    <published>2023-01-21T16:00:00.000Z</published>
    <updated>2023-03-14T12:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ansible的Host-pattern"><a href="#ansible的Host-pattern" class="headerlink" title="ansible的Host-pattern"></a>ansible的Host-pattern</h1><blockquote><p>双引号和单引号的使用要留意。</p></blockquote><blockquote><p>直接通配符</p></blockquote><ol><li>all 表示所有主机列表中的主机</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m ping</span><br></pre></td></tr></table></figure><ol start="2"><li><ul><li>缺省通配符</li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;*est&quot; -m ping</span><br></pre></td></tr></table></figure><ol start="3"><li>: 或关系</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;websrvs:appsrvs&quot; -m ping</span><br></pre></td></tr></table></figure><ol start="4"><li>:&amp; 逻辑与</li></ol><p>如：在A组且在B组中的主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;A:&amp;B&quot; -m ping</span><br></pre></td></tr></table></figure><ol start="5"><li>:! 逻辑非</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &#x27;A:!B&#x27; -m ping</span><br></pre></td></tr></table></figure><ol start="6"><li>~ 正则表达式</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;~(web|db).*&quot;</span><br></pre></td></tr></table></figure><h1 id="ansible执行状态"><a href="#ansible执行状态" class="headerlink" title="ansible执行状态"></a>ansible执行状态</h1><ul><li><p>绿色表示执行成功且未做更改；</p></li><li><p>黄色表示执行成功且做了更改；</p></li><li><p>红色表示执行失败；</p></li><li><p>蓝色表示详细过程；</p></li><li><p>紫色表示警告；</p></li><li><p>深灰表示debug；</p></li><li><p>褐色表示弃用。</p></li></ul><h1 id="ansible常用模块"><a href="#ansible常用模块" class="headerlink" title="ansible常用模块"></a>ansible常用模块</h1><blockquote><p>使用一个模块前，可以使用<code>ansible-doc &lt;moduel&gt;</code>查看一些帮助。</p></blockquote><h2 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h2><blockquote><p>功能：在远程主机执行命令。</p><p>不好用，建议用shell模块代替</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">- argv</span><br><span class="line">        Passes the command as a list rather than a string.</span><br><span class="line">        Use `argv&#x27; to avoid quoting values that would otherwise be interpreted incorrectly (for example &quot;user name&quot;).</span><br><span class="line">        Only the string or the list form can be provided, not both.  One or the other must be provided.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: list</span><br><span class="line">        version_added: 2.6</span><br><span class="line"></span><br><span class="line">- chdir</span><br><span class="line">        Change into this directory before running the command.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.6</span><br><span class="line"></span><br><span class="line">- cmd</span><br><span class="line">        The command to run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- creates</span><br><span class="line">        A filename or (since 2.0) glob pattern. If it already exists, this step *won&#x27;t* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line"></span><br><span class="line">- free_form</span><br><span class="line">        The command module takes a free form command to run.</span><br><span class="line">        There is no actual parameter named &#x27;free form&#x27;.</span><br><span class="line">        [Default: (null)]</span><br><span class="line"></span><br><span class="line">- removes</span><br><span class="line">        A filename or (since 2.0) glob pattern. If it already exists, this step *will* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.8</span><br><span class="line"></span><br><span class="line">- stdin</span><br><span class="line">        Set the stdin of the command directly to the specified value.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- stdin_add_newline</span><br><span class="line">        If set to `yes&#x27;, append a newline to stdin data.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.8</span><br><span class="line"></span><br><span class="line">- strip_empty_ends</span><br><span class="line">        Strip empty lines from the end of stdout/stderr in result.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.8</span><br><span class="line"></span><br><span class="line">- warn</span><br><span class="line">        Enable or disable task warnings.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 1.8</span><br></pre></td></tr></table></figure><p>不支持：$变量、特殊符号（分号，重定向，管道符等）。</p><h2 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h2><blockquote><p>功能：调用bash，在远程主机执行命令。</p><p>在执行一些复杂命令时也可能会报错。一般解决方案为写脚本执行，再将结果拉回。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS (= is mandatory):</span><br><span class="line"></span><br><span class="line">- chdir</span><br><span class="line">        Change into this directory before running the command.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.6</span><br><span class="line"></span><br><span class="line">- cmd</span><br><span class="line">        The command to run followed by optional arguments.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- creates</span><br><span class="line">        A filename, when it already exists, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line"></span><br><span class="line">- executable</span><br><span class="line">        Change the shell used to execute the command.</span><br><span class="line">        This expects an absolute path to the executable.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.9</span><br><span class="line"></span><br><span class="line">- free_form</span><br><span class="line">        The shell module takes a free form command to run, as a string.</span><br><span class="line">        There is no actual parameter named &#x27;free form&#x27;.</span><br><span class="line">        See the examples on how to use this module.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- removes</span><br><span class="line">        A filename, when it does not exist, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.8</span><br><span class="line"></span><br><span class="line">- stdin</span><br><span class="line">        Set the stdin of the command directly to the specified value.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- stdin_add_newline</span><br><span class="line">        Whether to append a newline to stdin data.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.8</span><br><span class="line"></span><br><span class="line">- warn</span><br><span class="line">        Whether to enable task warnings.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 1.8</span><br></pre></td></tr></table></figure><h2 id="script模块"><a href="#script模块" class="headerlink" title="script模块"></a>script模块</h2><blockquote><p>功能：运行脚本。自动完成复制脚本在远程主机完成。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS (= is mandatory):</span><br><span class="line"></span><br><span class="line">- chdir</span><br><span class="line">        Change into this directory on the remote node before running the script.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- cmd</span><br><span class="line">        Path to the local script to run followed by optional arguments.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- creates</span><br><span class="line">        A filename on the remote node, when it already exists, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 1.5</span><br><span class="line"></span><br><span class="line">- decrypt</span><br><span class="line">        This option controls the autodecryption of source files using vault.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- executable</span><br><span class="line">        Name or path of a executable to invoke the script with.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 2.6</span><br><span class="line"></span><br><span class="line">- free_form</span><br><span class="line">        Path to the local script file followed by optional arguments.</span><br><span class="line">        [Default: (null)]</span><br><span class="line"></span><br><span class="line">- removes</span><br><span class="line">        A filename on the remote node, when it does not exist, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 1.5</span><br></pre></td></tr></table></figure><h2 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h2><blockquote><p>复制文件至远程主机。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">请用ansible-doc copy查看</span></span><br><span class="line">copy:</span><br><span class="line">      attributes:            # The attributes the resulting file or directory should have. To get supported flags look at the man page for `chattr&#x27; on the</span><br><span class="line">                               target system. This string should contain the attributes in the same order as the one displayed</span><br><span class="line">                               by `lsattr&#x27;. The `=&#x27; operator is assumed as default, otherwise `+&#x27; or `-&#x27; operators need to be</span><br><span class="line">                               included in the string.</span><br><span class="line">      backup:                # Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it</span><br><span class="line">                               incorrectly.</span><br><span class="line">      checksum:              # SHA1 checksum of the file being transferred. Used to validate that the copy of the file was successful. If this is not</span><br><span class="line">                               provided, ansible will use the local calculated checksum of the src file.</span><br><span class="line">      content:               # When used instead of `src&#x27;, sets the contents of a file directly to the specified value. Works only when `dest&#x27; is a file.</span><br><span class="line">                               Creates the file if it does not exist. For advanced formatting or if `content&#x27; contains a</span><br><span class="line">                               variable, use the [template] module.</span><br><span class="line">      decrypt:               # This option controls the autodecryption of source files using vault.</span><br><span class="line">      dest:                  # (required) Remote absolute path where the file should be copied to. If `src&#x27; is a directory, this must be a directory too. If</span><br><span class="line">                               `dest&#x27; is a non-existent path and if either `dest&#x27; ends with &quot;/&quot; or `src&#x27; is a directory,</span><br><span class="line">                               `dest&#x27; is created. If `dest&#x27; is a relative path, the starting directory is determined by the</span><br><span class="line">                               remote host. If `src&#x27; and `dest&#x27; are files, the parent directory of `dest&#x27; is not created and</span><br><span class="line">                               the task fails if it does not already exist.</span><br><span class="line">      directory_mode:        # When doing a recursive copy set the mode for the directories. If this is not set we will use the system defaults. The mode is</span><br><span class="line">                               only set on directories which are newly created, and will not affect those that already</span><br><span class="line">                               existed.</span><br><span class="line">      follow:                # This flag indicates that filesystem links in the destination, if they exist, should be followed.</span><br><span class="line">      force:                 # Influence whether the remote file must always be replaced. If `yes&#x27;, the remote file will be replaced when contents are</span><br><span class="line">                               different than the source. If `no&#x27;, the file will only be transferred if the destination does</span><br><span class="line">                               not exist. Alias `thirsty&#x27; has been deprecated and will be removed in 2.13.</span><br><span class="line">      group:                 # Name of the group that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">      local_follow:          # This flag indicates that filesystem links in the source tree, if they exist, should be followed.</span><br><span class="line">      mode:                  # The permissions of the destination file or directory. For those used to `/usr/bin/chmod&#x27; remember that modes are actually</span><br><span class="line">                               octal numbers. You must either add a leading zero so that Ansible&#x27;s YAML parser knows it is an</span><br><span class="line">                               octal number (like `0644&#x27; or `01777&#x27;)or quote it (like `&#x27;644&#x27;&#x27; or `&#x27;1777&#x27;&#x27;) so Ansible receives</span><br><span class="line">                               a string and can do its own conversion from string into number. Giving Ansible a number without</span><br><span class="line">                               following one of these rules will end up with a decimal number which will have unexpected</span><br><span class="line">                               results. As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx&#x27;</span><br><span class="line">                               or `u=rw,g=r,o=r&#x27;). As of Ansible 2.3, the mode may also be the special string `preserve&#x27;.</span><br><span class="line">                               `preserve&#x27; means that the file will be given the same permissions as the source file.</span><br><span class="line">      owner:                 # Name of the user that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">      remote_src:            # Influence whether `src&#x27; needs to be transferred or already is present remotely. If `no&#x27;, it will search for `src&#x27; at</span><br><span class="line">                               originating/master machine. If `yes&#x27; it will go to the remote/target machine for the `src&#x27;.</span><br><span class="line">                               `remote_src&#x27; supports recursive copying as of version 2.8. `remote_src&#x27; only works with</span><br><span class="line">                               `mode=preserve&#x27; as of version 2.6.</span><br><span class="line">      selevel:               # The level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range&#x27;. When set to</span><br><span class="line">                               `_default&#x27;, it will use the `level&#x27; portion of the policy if available.</span><br><span class="line">      serole:                # The role part of the SELinux file context. When set to `_default&#x27;, it will use the `role&#x27; portion of the policy if available.</span><br><span class="line">      setype:                # The type part of the SELinux file context. When set to `_default&#x27;, it will use the `type&#x27; portion of the policy if available.</span><br><span class="line">      seuser:                # The user part of the SELinux file context. By default it uses the `system&#x27; policy, where applicable. When set to `_default&#x27;,</span><br><span class="line">                               it will use the `user&#x27; portion of the policy if available.</span><br><span class="line">      src:                   # Local path to a file to copy to the remote server. This can be absolute or relative. If path is a directory, it is copied</span><br><span class="line">                               recursively. In this case, if path ends with &quot;/&quot;, only inside contents of that directory are</span><br><span class="line">                               copied to destination. Otherwise, if it does not end with &quot;/&quot;, the directory itself with all</span><br><span class="line">                               contents is copied. This behavior is similar to the `rsync&#x27; command line tool.</span><br><span class="line">      unsafe_writes:         # Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file. By default this</span><br><span class="line">                               module uses atomic operations to prevent data corruption or inconsistent reads from the target</span><br><span class="line">                               files, but sometimes systems are configured or just broken in ways that prevent this. One</span><br><span class="line">                               example is docker mounted files, which cannot be updated atomically from inside the container</span><br><span class="line">                               and can only be written in an unsafe manner. This option allows Ansible to fall back to unsafe</span><br><span class="line">                               methods of updating files when atomic operations fail (however, it doesn&#x27;t force Ansible to</span><br><span class="line">                               perform unsafe writes). IMPORTANT! Unsafe writes are subject to race conditions and can lead to</span><br><span class="line">                               data corruption.</span><br><span class="line">      validate:              # The validation command to run before copying into place. The path to the file to validate is passed in via &#x27;%s&#x27; which must be</span><br><span class="line">                               present as in the examples below. The command is passed securely so shell features like</span><br><span class="line">                               expansion and pipes will not work.</span><br></pre></td></tr></table></figure><h2 id="fetch模块"><a href="#fetch模块" class="headerlink" title="fetch模块"></a>fetch模块</h2><blockquote><p>从远程主机拉取文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">fetch:</span><br><span class="line">      dest:                  # (required) A directory to save the file into. For example, if the `dest&#x27; directory is `/backup&#x27; a `src&#x27; file named</span><br><span class="line">                               `/etc/profile&#x27; on host `host.example.com&#x27;, would be saved into</span><br><span class="line">                               `/backup/host.example.com/etc/profile&#x27;. The host name is based on the inventory name.</span><br><span class="line">      fail_on_missing:       # When set to `yes&#x27;, the task will fail if the remote file cannot be read for any reason. Prior to Ansible 2.5, setting this</span><br><span class="line">                               would only fail if the source file was missing. The default was changed to `yes&#x27; in Ansible</span><br><span class="line">                               2.5.</span><br><span class="line">      flat:                  # Allows you to override the default behavior of appending hostname/path/to/file to the destination. If `dest&#x27; ends with &#x27;/&#x27;, it</span><br><span class="line">                               will use the basename of the source file, similar to the copy module. This can be useful if</span><br><span class="line">                               working with a single host, or if retrieving files that are uniquely named per host. If using</span><br><span class="line">                               multiple hosts with the same filename, the file will be overwritten for each host.</span><br><span class="line">      src:                   # (required) The file on the remote system to fetch. This `must&#x27; be a file, not a directory. Recursive fetching may be supported</span><br><span class="line">                               in a later release.</span><br><span class="line">      validate_checksum:     # Verify that the source and destination checksums match after the files are fetched.</span><br></pre></td></tr></table></figure><h2 id="file模块"><a href="#file模块" class="headerlink" title="file模块"></a>file模块</h2><blockquote><p>管理文件和文件属性</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">access_time:           # This parameter indicates the time the file&#x27;s access time should be set to. Should be `preserve&#x27; when no modification is</span><br><span class="line">                         required, `YYYYMMDDHHMM.SS&#x27; when using default time format, or `now&#x27;. Default is `None&#x27; meaning</span><br><span class="line">                         that `preserve&#x27; is the default for `state=[file,directory,link,hard]&#x27; and `now&#x27; is default for</span><br><span class="line">                         `state=touch&#x27;.</span><br><span class="line">access_time_format:    # When used with `access_time&#x27;, indicates the time format that must be used. Based on default Python format (see time.strftime</span><br><span class="line">                         doc).</span><br><span class="line">attributes:            # The attributes the resulting file or directory should have. To get supported flags look at the man page for `chattr&#x27; on the</span><br><span class="line">                         target system. This string should contain the attributes in the same order as the one displayed</span><br><span class="line">                         by `lsattr&#x27;. The `=&#x27; operator is assumed as default, otherwise `+&#x27; or `-&#x27; operators need to be</span><br><span class="line">                         included in the string.</span><br><span class="line">follow:                # This flag indicates that filesystem links, if they exist, should be followed. Previous to Ansible 2.5, this was `no&#x27; by</span><br><span class="line">                         default.</span><br><span class="line">force:                 # Force the creation of the symlinks in two cases: the source file does not exist (but will appear later); the destination</span><br><span class="line">                         exists and is a file (so, we need to unlink the `path&#x27; file and create symlink to the `src&#x27;</span><br><span class="line">                         file in place of it).</span><br><span class="line">group:                 # Name of the group that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">mode:                  # The permissions the resulting file or directory should have. For those used to `/usr/bin/chmod&#x27; remember that modes are</span><br><span class="line">                         actually octal numbers. You must either add a leading zero so that Ansible&#x27;s YAML parser knows</span><br><span class="line">                         it is an octal number (like `0644&#x27; or `01777&#x27;) or quote it (like `&#x27;644&#x27;&#x27; or `&#x27;1777&#x27;&#x27;) so</span><br><span class="line">                         Ansible receives a string and can do its own conversion from string into number. Giving Ansible</span><br><span class="line">                         a number without following one of these rules will end up with a decimal number which will have</span><br><span class="line">                         unexpected results. As of Ansible 1.8, the mode may be specified as a symbolic mode (for</span><br><span class="line">                         example, `u+rwx&#x27; or `u=rw,g=r,o=r&#x27;).</span><br><span class="line">modification_time:     # This parameter indicates the time the file&#x27;s modification time should be set to. Should be `preserve&#x27; when no modification is</span><br><span class="line">                         required, `YYYYMMDDHHMM.SS&#x27; when using default time format, or `now&#x27;. Default is None meaning</span><br><span class="line">                         that `preserve&#x27; is the default for `state=[file,directory,link,hard]&#x27; and `now&#x27; is default for</span><br><span class="line">                         `state=touch&#x27;.</span><br><span class="line">modification_time_format:   # When used with `modification_time&#x27;, indicates the time format that must be used. Based on default Python format (see</span><br><span class="line">                         time.strftime doc).</span><br><span class="line">owner:                 # Name of the user that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">path:                  # (required) Path to the file being managed.</span><br><span class="line">recurse:               # Recursively set the specified file attributes on directory contents. This applies only when `state&#x27; is set to `directory&#x27;.</span><br><span class="line">selevel:               # The level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range&#x27;. When set to</span><br><span class="line">                         `_default&#x27;, it will use the `level&#x27; portion of the policy if available.</span><br><span class="line">serole:                # The role part of the SELinux file context. When set to `_default&#x27;, it will use the `role&#x27; portion of the policy if available.</span><br><span class="line">setype:                # The type part of the SELinux file context. When set to `_default&#x27;, it will use the `type&#x27; portion of the policy if available.</span><br><span class="line">seuser:                # The user part of the SELinux file context. By default it uses the `system&#x27; policy, where applicable. When set to `_default&#x27;,</span><br><span class="line">                         it will use the `user&#x27; portion of the policy if available.</span><br><span class="line">src:                   # Path of the file to link to. This applies only to `state=link&#x27; and `state=hard&#x27;. For `state=link&#x27;, this will also accept a</span><br><span class="line">                         non-existing path. Relative paths are relative to the file being created (`path&#x27;) which is how</span><br><span class="line">                         the Unix command `ln -s SRC DEST&#x27; treats relative paths.</span><br><span class="line">state:                 # If `absent&#x27;, directories will be recursively deleted, and files or symlinks will be unlinked. In the case of a directory, if</span><br><span class="line">                         `diff&#x27; is declared, you will see the files and folders deleted listed under `path_contents&#x27;.</span><br><span class="line">                         Note that `absent&#x27; will not cause `file&#x27; to fail if the `path&#x27; does not exist as the state did</span><br><span class="line">                         not change. If `directory&#x27;, all intermediate subdirectories will be created if they do not</span><br><span class="line">                         exist. Since Ansible 1.7 they will be created with the supplied permissions. If `file&#x27;, without</span><br><span class="line">                         any other options this works mostly as a &#x27;stat&#x27; and will return the current state of `path&#x27;.</span><br><span class="line">                         Even with other options (i.e `mode&#x27;), the file will be modified but will NOT be created if it</span><br><span class="line">                         does not exist; see the `touch&#x27; value or the [copy] or [template] module if you want that</span><br><span class="line">                         behavior. If `hard&#x27;, the hard link will be created or changed. If `link&#x27;, the symbolic link</span><br><span class="line">                         will be created or changed. If `touch&#x27; (new in 1.4), an empty file will be created if the</span><br><span class="line">                         `path&#x27; does not exist, while an existing file or directory will receive updated file access and</span><br><span class="line">                         modification times (similar to the way `touch&#x27; works from the command line).</span><br><span class="line">unsafe_writes:         # Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file. By default this</span><br><span class="line">                         module uses atomic operations to prevent data corruption or inconsistent reads from the target</span><br><span class="line">                         files, but sometimes systems are configured or just broken in ways that prevent this. One</span><br><span class="line">                         example is docker mounted files, which cannot be updated atomically from inside the container</span><br><span class="line">                         and can only be written in an unsafe manner. This option allows Ansible to fall back to unsafe</span><br><span class="line">                         methods of updating files when atomic operations fail (however, it doesn&#x27;t force Ansible to</span><br><span class="line">                         perform unsafe writes). IMPORTANT! Unsafe writes are subject to race conditions and can lead to</span><br><span class="line">                         data corruption.</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ansible学习笔记</summary>
    
    
    
    <category term="Linux" scheme="http://asucanyh-cn.github.io/categories/Linux/"/>
    
    
    <category term="ansible" scheme="http://asucanyh-cn.github.io/tags/ansible/"/>
    
    <category term="linux" scheme="http://asucanyh-cn.github.io/tags/linux/"/>
    
  </entry>
  
</feed>
